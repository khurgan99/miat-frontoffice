{"version":3,"file":"static/js/433.19aa30a2.chunk.js","mappings":"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","sources":["pages/Destinations.js"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from 'react';\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5map from \"@amcharts/amcharts5/map\";\r\nimport mongoliaGeoJSON from './mn.json';\r\nimport am5geodataWorldLow from \"@amcharts/amcharts5-geodata/worldLow\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nconst Destinations = () => {\r\n\r\n    const [choosedCountry, setChoosedCountry] = useState({});\r\n    const [shownavigate, setShowNavigate] = useState(true);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const colors = {\r\n        G: am5.color(\"#2652fb\"),\r\n        O: am5.color(0xFFA500),\r\n        N: am5.color(0xFF1493)\r\n    }\r\n\r\n    const citiesMn = [\r\n        {\r\n            id: \"ulaanbaatar\",\r\n            title: \"Ulaanbaatar\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/AdobeStock_227948748.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.917, 47.9186] }\r\n        },\r\n        {\r\n            id: \"dalanzadgad\",\r\n            title: \"Dalanzadgad\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/_MG_9388KhermenTsavUmnugovi.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [104.416, 43.5708] }\r\n        },\r\n        {\r\n            id: \"uliastai\",\r\n            title: \"Uliastai\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/OtgontengerZavhan.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [97.7694, 47.7417] }\r\n        },\r\n        {\r\n            id: \"khovd\",\r\n            title: \"Khovd\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/AltanHuhiiHovd.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [91.6419, 48.0056] }\r\n        },\r\n        {\r\n            id: \"altai\",\r\n            title: \"Altai\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/photo_2024-02-14_15-53-24.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [96.2491, 46.3722] }\r\n        },\r\n        {\r\n            id: \"ulaangom\",\r\n            title: \"Ulaangom\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/IMG_4013TurgenMountainsUvs.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [92.0667, 49.9811] }\r\n        },\r\n        {\r\n            id: \"murun\",\r\n            title: \"Murun\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/DJI_0077.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [100.155, 49.6342] }\r\n        },\r\n        {\r\n            id: \"ulgii\",\r\n            title: \"Ulgii\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/BagaturgeniiuulsBayanUlgii.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [89.9674, 48.9683] }\r\n        },\r\n    ];\r\n\r\n    const cities = [\r\n        {\r\n            id: \"ulaanbaatar\",\r\n            title: t('ulaanbaatar'),\r\n            country: 'mongolia',\r\n            image: \"/image/main/AdobeStock_227948748.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.917, 47.9186] },\r\n            perspectives: [\r\n                \"singapore\",\r\n                \"australia\",\r\n                \"usa\",\r\n            ]\r\n        },\r\n        {\r\n            id: \"frankfurt\",\r\n            title: t('frankfurt'),\r\n            country: 'germany',\r\n            distance: '7,010 km',\r\n            duration: \"8 hours, 45 minutes\",\r\n            image: \"/image/main/vertical-view-roemerberg-frankfurt-germany.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [8.6821, 50.1109] }\r\n        },\r\n        {\r\n            id: \"hongkong\",\r\n            title: t('hongkong'),\r\n            country: 'china',\r\n            distance: '3,350 km',\r\n            duration: \"4 hours, 10 minutes\",\r\n            image: \"/image/main/hong-kong-skyline-with-boats.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [114.2, 22.3] },\r\n            destinations: [\r\n                'delhi',\r\n                'mumbai',\r\n                'ho_chi_minh',\r\n                'singapore',\r\n                'perth',\r\n                'melbourne',\r\n                'sydney',\r\n                'brisbane',\r\n                'san_francisco',\r\n                'los_angeles',\r\n                'chicago',\r\n                'washington',\r\n                'new_york',\r\n                'boston',\r\n            ]\r\n        },\r\n        {\r\n            id: \"tokyo\",\r\n            title: t('tokyo'),\r\n            country: 'japan',\r\n            distance: '3,869 km',\r\n            duration: \"4 hours, 22 minutes\",\r\n            image: \"/image/main/AdobeStock_268173642.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [139.6917, 35.6895] },\r\n            destinations: [\r\n                'sapporo'\r\n            ]\r\n        },\r\n        {\r\n            id: \"seoul\",\r\n            title: t('seoul'),\r\n            country: 'south_korea',\r\n            distance: '2,304 km',\r\n            duration: \"2 hours, 45 minutes\",\r\n            image: \"/image/main/seoul-tower-with-gyeongbokgung-roof-red-autumn-maple-leaves-namsan-mountain-south-korea.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [126.9779, 37.5665] }\r\n        },\r\n        {\r\n            id: \"ho_chi_minh\",\r\n            title: t('ho_chi_minh'),\r\n            country: 'vietnam',\r\n            distance: '4,563 km',\r\n            duration: \"5 hours, 30 minutes\",\r\n            image: \"/image/main/54455949-city-18144-167c85df43f.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.6297, 10.8231] }\r\n        },\r\n        {\r\n            id: \"istanbul\",\r\n            title: t('istanbul'),\r\n            country: 'turkey',\r\n            distance: '6,702 km',\r\n            duration: \"8 hours, 32 minutes\",\r\n            image: \"/image/main/AdobeStock_304983855.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [28.9784, 41.0082] },\r\n            destinations: [\r\n                'amsterdam',\r\n                'brussels',\r\n                'vienna',\r\n                'warsaw',\r\n                'zurich',\r\n                'barcelona',\r\n                'rome',\r\n                'chicago',\r\n            ]\r\n        },\r\n        {\r\n            id: \"busan\",\r\n            title: t('busan'),\r\n            country: 'south_korea',\r\n            distance: '2,593 km',\r\n            duration: \"3 hours, 1 minute\",\r\n            image: \"/image/main/AdobeStock_306120806.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [129.0756, 35.1796] }\r\n        },\r\n        {\r\n            id: \"bangkok\",\r\n            title: t('bangkok'),\r\n            country: 'thailand',\r\n            distance: '4,117 km',\r\n            duration: \"5 hours, 0 minute\",\r\n            image: \"/image/main/AdobeStock_105446989.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [100.5018, 13.7563] }\r\n        },\r\n        {\r\n            id: \"beijing\",\r\n            title: t('beijing'),\r\n            country: 'china',\r\n            distance: '1,383 km',\r\n            duration: \"1 hour, 50 minutes\",\r\n            image: \"/image/main/AdobeStock_38307012.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [116.4074, 39.9042] }\r\n        },\r\n        {\r\n            id: \"osaka\",\r\n            title: t('osaka'),\r\n            country: 'japan',\r\n            distance: '3,221 km',\r\n            duration: \"3 hours, 50 minutes\",\r\n            image: \"/image/main/osaka-castle-cherry-blossom-spring-sakura-seasons-osaka-japan.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [135.5022, 34.6937] }\r\n        },\r\n        {\r\n            id: \"phuket\",\r\n            title: t('phuket'),\r\n            country: 'thailand',\r\n            distance: '4,847 km',\r\n            duration: \"6 hours, 2 minutes\",\r\n            image: \"/image/main/beautiful-girl-sitting-rock-james-bond-island-phang-nga-thailand.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [98.3381, 7.8804] }\r\n        },\r\n        {\r\n            id: \"guangzhou\",\r\n            title: t('guangzhou'),\r\n            country: 'china',\r\n            distance: '2,965 km',\r\n            duration: \"3 hours, 45 minutes\",\r\n            image: \"/image/main/AdobeStock_67203423.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [113.2644, 23.1291] }\r\n        }\r\n    ];\r\n\r\n    const subcities = [\r\n        {\r\n            id: \"amsterdam\",\r\n            title: t('amsterdam'),\r\n            country: 'netherlands',\r\n            geometry: { type: \"Point\", coordinates: [4.9041, 52.3676] }\r\n        },\r\n        {\r\n            id: \"brussels\",\r\n            title: t('brussels'),\r\n            country: 'belgium',\r\n            geometry: { type: \"Point\", coordinates: [4.3517, 50.8503] }\r\n        },\r\n        {\r\n            id: \"vienna\",\r\n            title: t('vienna'),\r\n            country: 'austria',\r\n            geometry: { type: \"Point\", coordinates: [16.3738, 48.2082] }\r\n        },\r\n        {\r\n            id: \"warsaw\",\r\n            title: t('warsaw'),\r\n            country: 'poland',\r\n            geometry: { type: \"Point\", coordinates: [21.0122, 52.2298] }\r\n        },\r\n        {\r\n            id: \"zurich\",\r\n            title: t('zurich'),\r\n            country: 'switzerland',\r\n            geometry: { type: \"Point\", coordinates: [8.5417, 47.3769] }\r\n        },\r\n        {\r\n            id: \"barcelona\",\r\n            title: t('barcelona'),\r\n            country: 'spain',\r\n            geometry: { type: \"Point\", coordinates: [2.1734, 41.3851] }\r\n        },\r\n        {\r\n            id: \"rome\",\r\n            title: t('rome'),\r\n            country: 'italy',\r\n            geometry: { type: \"Point\", coordinates: [12.4964, 41.9028] }\r\n        },\r\n        {\r\n            id: \"chicago\",\r\n            title: t('chicago'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-87.6298, 41.8781] }\r\n        },\r\n        {\r\n            id: \"delhi\",\r\n            title: t('delhi'),\r\n            country: 'india',\r\n            geometry: { type: \"Point\", coordinates: [77.2090, 28.6139] }\r\n        },\r\n        {\r\n            id: \"mumbai\",\r\n            title: t('mumbai'),\r\n            country: 'india',\r\n            geometry: { type: \"Point\", coordinates: [72.8777, 19.0760] }\r\n        },\r\n        {\r\n            id: \"ho_chi_minh\",\r\n            title: t('ho_chi_minh'),\r\n            country: 'vietnam',\r\n            geometry: { type: \"Point\", coordinates: [106.6602, 10.7629] }\r\n        },\r\n        {\r\n            id: \"singapore\",\r\n            title: t('singapore'),\r\n            country: 'singapore',\r\n            geometry: { type: \"Point\", coordinates: [103.8198, 1.3521] }\r\n        },\r\n        {\r\n            id: \"perth\",\r\n            title: t('perth'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [115.8575, -31.9505] }\r\n        },\r\n        {\r\n            id: \"melbourne\",\r\n            title: t('melbourne'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [144.9631, -37.8136] }\r\n        },\r\n        {\r\n            id: \"sydney\",\r\n            title: t('sydney'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [151.2093, -33.8688] }\r\n        },\r\n        {\r\n            id: \"brisbane\",\r\n            title: t('brisbane'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [153.0251, -27.4698] }\r\n        },\r\n        {\r\n            id: \"san_francisco\",\r\n            title: t('san_francisco'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-122.4194, 37.7749] }\r\n        },\r\n        {\r\n            id: \"los_angeles\",\r\n            title: t('los_angeles'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-118.2437, 34.0522] }\r\n        },\r\n        {\r\n            id: \"washington\",\r\n            title: t('washington'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-77.0369, 38.9072] }\r\n        },\r\n        {\r\n            id: \"new_york\",\r\n            title: t('new_york'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-74.0060, 40.7128] }\r\n        },\r\n        {\r\n            id: \"boston\",\r\n            title: t('boston'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-71.0589, 42.3601] }\r\n        },\r\n        {\r\n            id: \"sapporo\",\r\n            title: t('sapporo'),\r\n            country: 'japan',\r\n            geometry: { type: \"Point\", coordinates: [141.3544, 43.0618] }\r\n        },\r\n        {\r\n            id: \"singapore\",\r\n            title: t('singapore'),\r\n            country: 'singapore',\r\n            geometry: { type: \"Point\", coordinates: [103.8198, 1.3521] },\r\n            perspective: true\r\n        },\r\n        {\r\n            id: \"australia\",\r\n            title: t('australia'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [133.7751, -25.2744] },\r\n            perspective: true,\r\n        },\r\n        {\r\n            id: \"usa\",\r\n            title: t('usa'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-98.5795, 39.8283] },\r\n            perspective: true,\r\n        }\r\n    ];\r\n\r\n    const clickShowNavigate = () => {\r\n        setShowNavigate(!shownavigate)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        let root = am5.Root.new(\"chartdiv\");\r\n\r\n        // Set themes\r\n        root.setThemes([\r\n            am5themes_Animated.new(root)\r\n        ]);\r\n\r\n        var chart = root.container.children.push(\r\n            am5map.MapChart.new(root, {\r\n                panX: \"rotateX\",\r\n                panY: \"rotateY\",\r\n                // projection: am5map.geoMercator(),\r\n                // projection: am5map.geoNaturalEarth1(),\r\n                projection: am5map.geoOrthographic(),\r\n                // homeGeoPoint: { latitude: 46.8625, longitude: 103.8467 },\r\n                // wheelY: \"none\",\r\n                // rotationX: -130.8467,\r\n                // scale: 1.5\r\n            })\r\n        );\r\n\r\n        var cont = chart.children.push(am5.Container.new(root, {\r\n            layout: root.horizontalLayout,\r\n            x: am5.p100,\r\n            y: 100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n        }));\r\n\r\n        // Add labels and controls\r\n        cont.children.push(am5.Label.new(root, {\r\n            centerY: am5.p50,\r\n            text: t('connected'),\r\n            fill: am5.color(0xffffff)\r\n        }));\r\n\r\n        var switchButton = cont.children.push(am5.Button.new(root, {\r\n            themeTags: [\"switch\"],\r\n            centerY: am5.p50,\r\n            icon: am5.Circle.new(root, {\r\n                themeTags: [\"icon\"]\r\n            })\r\n        }));\r\n\r\n        cont.children.push(\r\n            am5.Label.new(root, {\r\n                centerY: am5.p50,\r\n                text: t('routes'),\r\n                fill: am5.color(0xffffff)\r\n            })\r\n        );\r\n\r\n        switchButton.on(\"active\", function () {\r\n            if (!switchButton.get(\"active\")) {\r\n                goHome()\r\n            } else {\r\n                sublineSeries.show()\r\n                perspectiveSeries.show()\r\n                subcitySeries.show()\r\n                legend.show()\r\n            }\r\n        });\r\n\r\n\r\n        let zoomControl = chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\r\n        zoomControl.homeButton.set(\"visible\", true);\r\n        chart.chartContainer.get(\"background\").events.on(\"click\", function () {\r\n            goHome();\r\n        })\r\n\r\n        zoomControl.homeButton.events.on(\"click\", function () {\r\n            goHome();\r\n        })\r\n\r\n        // Create polygon series\r\n        var polygonSeries = chart.series.push(\r\n            am5map.MapPolygonSeries.new(root, {\r\n                geoJSON: am5geodataWorldLow,\r\n                exclude: [\"AQ\"]\r\n            })\r\n        );\r\n\r\n        polygonSeries.mapPolygons.template.events.on(\"click\", (ev) => {\r\n            var dataItem = ev.target.dataItem;\r\n            var data = dataItem.dataContext;\r\n            if (data.id === 'MN') {\r\n                var zoomAnimation = polygonSeries.zoomToDataItem(dataItem);\r\n                Promise.all([\r\n                    zoomAnimation.waitForStop(),\r\n                ]).then(function (results) {\r\n                    stateSeries.show();\r\n                    // polygonSeries.hide(100)\r\n                    backContainer.show();\r\n                    lineSeries.hide()\r\n                    planeSeries.hide()\r\n                    sublineSeries.hide()\r\n                    perspectiveSeries.hide()\r\n                    legend.hide()\r\n\r\n                    lineSeriesMn.set(\"layer\", 100);\r\n                    planeSeriesMn.set(\"layer\", 100);\r\n                    citySeriesMn.set(\"layer\", 100);\r\n                    // pointSeriesMn.show();\r\n                    lineSeriesMn.show();\r\n                    planeSeriesMn.show();\r\n                    citySeriesMn.show();\r\n                    cont.hide()\r\n                });\r\n\r\n                // zoomMongolia()\r\n            }\r\n        });\r\n\r\n        // let colors = am5.ColorSet.new(root, {\r\n        //     step: 2\r\n        // });\r\n        // colors.next();\r\n\r\n        // polygonSeries.mapPolygons.template.states.create(\"hover\", {\r\n        //     fill: am5.Color.brighten(colors.next(), -0.3)\r\n        // });\r\n\r\n        var backgroundSeries = chart.series.unshift(\r\n            am5map.MapPolygonSeries.new(root, {})\r\n        );\r\n\r\n        backgroundSeries.mapPolygons.template.setAll({\r\n            fill: am5.color(\"#00000080\"),\r\n            strokeOpacity: 0\r\n        });\r\n\r\n        backgroundSeries.data.push({\r\n            geometry: am5map.getGeoRectangle(90, 180, -90, -180)\r\n        });\r\n\r\n        chart.animate({ key: \"rotationX\", to: -80.8467, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });\r\n        chart.animate({ key: \"rotationY\", to: -20.8625, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });\r\n\r\n        // this will be invisible line (note strokeOpacity = 0) along which invisible points will animate\r\n        let lineSeries = chart.series.push(am5map.MapLineSeries.new(root, {}));\r\n        lineSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: am5.color(\"#2259ff\"),\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let sublineSeries = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            visible: false\r\n        }));\r\n        sublineSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: colors.O,\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let perspectiveSeries = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            visible: false\r\n        }));\r\n        perspectiveSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: colors.N,\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let lineSeriesMn = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            lineType: \"curved\",\r\n            visible: false,\r\n        }));\r\n\r\n        lineSeriesMn.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: am5.color(\"#2259ff\"),\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        // this will be visible line. Lines will connectg animating points so they will look like animated\r\n        // let animatedLineSeries = chart.series.push(am5map.MapLineSeries.new(root, {}));\r\n        // animatedLineSeries.mapLines.template.setAll({\r\n        //     // stroke: am5.color(0xffba00),\r\n        //     // strokeOpacity: 0.6,\r\n        //     strokeWidth: 1,\r\n        // });\r\n\r\n        // invisible series which will animate along invisible lines\r\n        let animatedBulletSeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {})\r\n        );\r\n\r\n        animatedBulletSeries.bullets.push(function () {\r\n            let circle = am5.Circle.new(root, {\r\n                radius: 0\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: circle\r\n            });\r\n        });\r\n\r\n        // destination series\r\n        let citySeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {})\r\n        );\r\n\r\n        let subcitySeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {\r\n                visible: false,\r\n            })\r\n        );\r\n\r\n        let citySeriesMn = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {\r\n                visible: false,\r\n            })\r\n        );\r\n\r\n        let pointSeriesMn = chart.series.push(am5map.MapPointSeries.new(root, {\r\n            // visible: false,\r\n        }));\r\n        let planeSeriesMn = chart.series.push(am5map.MapPointSeries.new(root, {\r\n            visible: false,\r\n        }));\r\n        let planeSeries = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n        let pointSeries = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n\r\n        let point1 = addCity({ latitude: 47.9186, longitude: 106.917 }, \"Ulaanbaatar\");\r\n        let point2 = null;\r\n        let point3 = null;\r\n        if (choosedCountry.id) {\r\n            point2 = addCity({\r\n                latitude: choosedCountry.geometry.coordinates[1],\r\n                longitude: choosedCountry.geometry.coordinates[0]\r\n            }, \"Frankfurt\");\r\n            point3 = addCity({\r\n                latitude: choosedCountry.geometry.coordinates[1],\r\n                longitude: choosedCountry.geometry.coordinates[0]\r\n            }, \"Frankfurt\");\r\n        } else {\r\n            point2 = addCity({ latitude: 50.1109, longitude: 8.6821 }, \"Frankfurt\");\r\n            point3 = addCity({ latitude: 50.1109, longitude: 8.6821 }, \"Frankfurt\");\r\n        }\r\n\r\n        let lineDataItem = lineSeries.pushDataItem({\r\n            pointsToConnect: [point1, point2, point3]\r\n        });\r\n\r\n        const point1Mn = addCityMn({ latitude: 47.9186, longitude: 106.917 }, \"Ulaanbaatar\");\r\n        const point2Mn = addCityMn({ latitude: 48.0056, longitude: 91.6419 });\r\n\r\n        let lineDataItemMn = lineSeriesMn.pushDataItem({\r\n            pointsToConnect: [point1Mn, point2Mn]\r\n        });\r\n\r\n        let plane = am5.Graphics.new(root, {\r\n            svgPath:\r\n                \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\",\r\n            scale: 0.07,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            fill: am5.color('#fcffff')\r\n        });\r\n\r\n        let planeMn = am5.Graphics.new(root, {\r\n            svgPath:\r\n                \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\",\r\n            scale: 0.07,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            fill: am5.color('#fcffff')\r\n        });\r\n\r\n        planeSeries.bullets.push(function () {\r\n            let container = am5.Container.new(root, {});\r\n            container.children.push(plane);\r\n            return am5.Bullet.new(root, { sprite: container });\r\n        });\r\n\r\n        planeSeriesMn.bullets.push(function () {\r\n            let container = am5.Container.new(root, {});\r\n            container.children.push(planeMn);\r\n            return am5.Bullet.new(root, { sprite: container });\r\n        });\r\n\r\n        let circleTemplate = am5.Template.new({});\r\n        // visible city circles\r\n        citySeries.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 5,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1500, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    layer: 5,\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItem.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setChoosedCountry(data);\r\n                setShowNavigate(true)\r\n                point2.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n                point3.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n        citySeries.data.setAll(cities);\r\n\r\n        subcitySeries.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n            const data = dataItem.dataContext;\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    radius: 4,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: data.perspective ? colors.N : colors.O, // 6 тэмдэгттэй HEX\r\n                    stroke: data.perspective ? colors.N : colors.O, // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 5,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1500, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    layer: 5,\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItem.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setShowNavigate(true)\r\n                let isfound = null;\r\n                cities.forEach(element => {\r\n                    if (element.destinations) {\r\n                        element.destinations.forEach(city => {\r\n                            if (city === data.id) {\r\n                                isfound = element;\r\n                                point2.setAll({\r\n                                    longitude: element.geometry.coordinates[0],\r\n                                    latitude: element.geometry.coordinates[1]\r\n                                })\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                setChoosedCountry({...data, issub: isfound});\r\n\r\n                if (!isfound) {\r\n                    point2.setAll({\r\n                        longitude: data.geometry.coordinates[0],\r\n                        latitude: data.geometry.coordinates[1]\r\n                    })\r\n                }\r\n\r\n                point3.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n\r\n        subcitySeries.data.setAll(subcities);\r\n\r\n        citySeriesMn.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    layer: 100,\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 5,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n            circle.set(\"layer\", 200);\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1500, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    layer: 100,\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItemMn.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setChoosedCountry(data);\r\n                setShowNavigate(true)\r\n                point2Mn.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n        citySeriesMn.data.setAll(citiesMn);\r\n        // Prepare line series data\r\n        let mongoliaDataItem = citySeries.getDataItemById(\"ulaanbaatar\");\r\n\r\n        am5.array.each(citiesMn, function (did) {\r\n            let destinationDataItem = citySeriesMn.getDataItemById(did.id);\r\n            let lineDataItem = lineSeriesMn.pushDataItem({});\r\n            lineDataItem.set(\"pointsToConnect\", [mongoliaDataItem, destinationDataItem])\r\n        });\r\n\r\n        // this will do all the animations\r\n        am5.array.each(cities, function (did) {\r\n            let destinationDataItem = citySeries.getDataItemById(did.id);\r\n            let lineDataItem = lineSeries.pushDataItem({});\r\n            lineDataItem.set(\"pointsToConnect\", [mongoliaDataItem, destinationDataItem])\r\n        });\r\n\r\n        am5.array.each(cities, function (did) {\r\n            if (did.destinations) {\r\n                let mainDataItem = citySeries.getDataItemById(did.id);\r\n                did.destinations.forEach(element => {\r\n                    let lineDataItem = sublineSeries.pushDataItem({});\r\n                    let destinationDataItem = subcitySeries.getDataItemById(element);\r\n                    lineDataItem.set(\"pointsToConnect\", [mainDataItem, destinationDataItem])\r\n                });\r\n            }\r\n            if (did.perspectives) {\r\n                let mainDataItem = citySeries.getDataItemById(did.id);\r\n                did.perspectives.forEach(element => {\r\n                    let lineDataItem = perspectiveSeries.pushDataItem({});\r\n                    let destinationDataItem = subcitySeries.getDataItemById(element);\r\n                    lineDataItem.set(\"pointsToConnect\", [mainDataItem, destinationDataItem])\r\n                });\r\n            }\r\n        });\r\n\r\n        let planeDataItem = planeSeries.pushDataItem({\r\n            lineDataItem,\r\n            positionOnLine: 0,\r\n            autoRotate: true\r\n        });\r\n\r\n        planeDataItem.dataContext = {};\r\n        let planeDataItemMn = planeSeriesMn.pushDataItem({\r\n            lineDataItem: lineDataItemMn,\r\n            positionOnLine: 0,\r\n            autoRotate: true\r\n        });\r\n\r\n        planeDataItemMn.dataContext = {};\r\n        resetPlaneAnimation()\r\n\r\n        function resetPlaneAnimation() {\r\n            // Re-animate the plane along the line\r\n            planeDataItem.animate({\r\n                key: \"positionOnLine\",\r\n                to: 1,\r\n                duration: 30000, // Adjust duration as needed\r\n                loops: Infinity, // Make sure it loops if desired\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth yoyo animation\r\n            });\r\n\r\n            // Update the rotation based on position\r\n            planeDataItem.on(\"positionOnLine\", (value) => {\r\n                if (planeDataItem.dataContext.prevPosition < value) {\r\n                    plane.set(\"rotation\", 0);\r\n                }\r\n\r\n                if (planeDataItem.dataContext.prevPosition > value) {\r\n                    plane.set(\"rotation\", -180);\r\n                }\r\n                planeDataItem.dataContext.prevPosition = value;\r\n            });\r\n\r\n            planeDataItemMn.animate({\r\n                key: \"positionOnLine\",\r\n                to: 1,\r\n                duration: 30000, // Adjust duration as needed\r\n                loops: Infinity, // Make sure it loops if desired\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth yoyo animation\r\n            });\r\n\r\n            // Update the rotation based on position\r\n            planeDataItemMn.on(\"positionOnLine\", (value) => {\r\n                if (planeDataItemMn.dataContext.prevPosition < value) {\r\n                    planeMn.set(\"rotation\", 0);\r\n                }\r\n\r\n                if (planeDataItemMn.dataContext.prevPosition > value) {\r\n                    planeMn.set(\"rotation\", -180);\r\n                }\r\n                planeDataItemMn.dataContext.prevPosition = value;\r\n            });\r\n        }\r\n\r\n        function addCity(coords, title) {\r\n            return pointSeries.pushDataItem({\r\n                latitude: coords.latitude,\r\n                longitude: coords.longitude\r\n            });\r\n        }\r\n\r\n        function addCityMn(coords, title) {\r\n            return pointSeriesMn.pushDataItem({\r\n                latitude: coords.latitude,\r\n                longitude: coords.longitude\r\n            });\r\n        }\r\n\r\n        function goHome() {\r\n            chart.goHome();\r\n            stateSeries.hide();\r\n            backContainer.hide();\r\n            lineSeriesMn.hide();\r\n            planeSeriesMn.hide();\r\n            citySeriesMn.hide();\r\n            lineSeries.show()\r\n            planeSeries.show()\r\n            sublineSeries.hide()\r\n            perspectiveSeries.hide()\r\n            subcitySeries.hide()\r\n            legend.hide()\r\n            cont.show()\r\n        }\r\n\r\n        var stateSeries = chart.series.push(am5map.MapPolygonSeries.new(root, {\r\n            visible: false,\r\n            geoJSON: mongoliaGeoJSON\r\n        }));\r\n\r\n        var backContainer = chart.children.push(am5.Container.new(root, {\r\n            x: am5.p100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n            paddingTop: 2,\r\n            paddingRight: 10,\r\n            paddingBottom: 2,\r\n            y: 100,\r\n            interactiveChildren: false,\r\n            layout: root.horizontalLayout,\r\n            cursorOverStyle: \"pointer\",\r\n            background: am5.RoundedRectangle.new(root, {\r\n                fill: am5.color(0xffffff),\r\n                fillOpacity: 0.2\r\n            }),\r\n            visible: false\r\n        }));\r\n\r\n        backContainer.children.push(am5.Label.new(root, {\r\n            text: \"Back\",\r\n            centerY: am5.p50,\r\n            fill: am5.color(0xffffff)\r\n        }));\r\n\r\n        backContainer.children.push(am5.Graphics.new(root, {\r\n            width: 32,\r\n            height: 32,\r\n            centerY: am5.p50,\r\n            fill: am5.color(0xffffff),\r\n            svgPath: \"M12 9.059V6.5a1.001 1.001 0 0 0-1.707-.708L4 12l6.293 6.207a.997.997 0 0 0 1.414 0A.999.999 0 0 0 12 17.5v-2.489c2.75.068 5.755.566 8 3.989v-1c0-4.633-3.5-8.443-8-8.941z\"\r\n        }));\r\n\r\n        backContainer.events.on(\"click\", function () {\r\n            goHome();\r\n        });\r\n\r\n        let legend = chart.children.push(am5.Legend.new(root, {\r\n            visible: false,\r\n            nameField: \"name\",\r\n            fillField: \"color\",\r\n            strokeField: \"color\",\r\n            useDefaultMarker: true,\r\n            centerX: am5.p50,\r\n            x: am5.p50,\r\n            centerY: am5.p100,\r\n            y: am5.p100,\r\n            dy: -20,\r\n            background: am5.RoundedRectangle.new(root, {\r\n                fill: am5.color(0xffffff),\r\n                fillOpacity: 0.2\r\n            })\r\n        }));\r\n\r\n        legend.labels.template.setAll({\r\n            fill: am5.color(0xffffff) // White text color\r\n        });\r\n\r\n        legend.data.setAll([{\r\n            name: t(\"scheduled_routes\"),\r\n            color: colors.G,\r\n        }, {\r\n            name: t(\"codeshare_routes\"),\r\n            color: colors.O\r\n        }, {\r\n            name: t(\"perspective\"),\r\n            color: colors.N\r\n        }]);\r\n\r\n        return () => {\r\n            root.dispose();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className='mb-[4rem] h-[100vh]'>\r\n            <div className='w-[100%] h-[100vh] fixed top-0 left-0'>\r\n\r\n                <div className={classNames(\r\n                    choosedCountry.title ? 'opacity-100' : 'opacity-0',\r\n                    'transition-opacity ease-in-out delay-150 duration-300'\r\n                )}>\r\n                    <div\r\n                        className={\r\n                            classNames(\r\n                                'transition absolute bg-black/30 w-80 h-full text-white pt-20',\r\n                                'backdrop-blur-md px-4 py-8 space-y-4 shadow-md z-10 duration-500',\r\n                                shownavigate ? 'translate-x-0' : '-translate-x-full'\r\n                            )}\r\n                        style={{\r\n                            boxShadow: \"0 1px 2px rgba(60,64,67,0.3),0 2px 6px 2px rgba(60,64,67,0.15)\"\r\n                        }}\r\n                    >\r\n                        {/* <div className='text-center'>\r\n                                    {t('ulaanbaatar')} - {t(choosedCountry.id)}\r\n                                </div> */}\r\n                        <div className=\"flex flex-col justify-between h-full\">\r\n                            <div>\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${choosedCountry.image ?? \"/image/main/plane-500.jpg\"})` }}\r\n                                    className='rounded-md bg-cover bg-center bg-no-repeat h-44 w-full'\r\n                                >\r\n                                    {/* <img src={choosedCountry.image ?? \"/image/main/plane-500.jpg\"} alt=\"\"\r\n                                                className=\"rounded-md h-60\"\r\n                                            /> */}\r\n                                </div>\r\n                                {choosedCountry.image && <div className='text-justify text-sm mt-4'>\r\n                                    {t(choosedCountry.id + 'desc')}\r\n                                </div>}\r\n                            </div>\r\n                            <div>\r\n                                <div className='absolute right-[20%] pt-3 font-bold'>\r\n                                    {t(choosedCountry.id)}\r\n                                </div>\r\n                                {choosedCountry.distance && <div className='absolute bottom-[12rem] left-[10px]'>\r\n                                    <div className='flex items-center bg-black/30 p-2 rounded backdrop-blur-md'>\r\n                                        <div className='text-xs'>Distance: &nbsp;</div>\r\n                                        <div className='text-sm'>{choosedCountry.distance}</div>\r\n                                    </div>\r\n                                    <span className=\"relative flex h-3 w-3 mx-auto -z-[1]\">\r\n                                        <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75\"></span>\r\n                                        <span className=\"relative h-3 w-3 rounded-full bg-sky-500\"></span>\r\n                                    </span>\r\n                                </div>}\r\n                                <img src=\"/logos/some/flight2.png\" alt=\"\" className='h-64' />\r\n                                {choosedCountry.issub && <div className='absolute bottom-[8rem] left-[50%] font-bold'>\r\n                                    {t(choosedCountry.issub.id)}\r\n                                </div>}\r\n                                <div className='absolute bottom-[3rem] left-[20%] font-bold'>\r\n                                    {t('ulaanbaatar')}\r\n                                </div>\r\n                                {choosedCountry.duration && <div className='absolute bottom-[6rem] right-[5px] bg-black/30 p-2 rounded backdrop-blur-md'>\r\n                                    <div className='text-xs'>Total travel time: </div>\r\n                                    <div className='text-sm'>{choosedCountry.duration}</div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\r\n                        classNames(\r\n                            'transition absolute left-80 top-[calc(50%-24px)] block z-10 duration-500',\r\n                            shownavigate ? 'translate-x-0' : '-translate-x-80'\r\n                        )\r\n                    }>\r\n                        <button\r\n                            className={classNames(\r\n                                'h-[48px] w-[23px] bg-black/30 backdrop-blur-md cursor-pointer hover:bg-primary-700',\r\n                                'rounded-r-full border-l border-l-primary-600'\r\n                            )}\r\n                            style={{\r\n                                boxShadow: '0 1px 2px rgba(60, 64, 67, 0.3), 0 2px 6px 2px rgba(60, 64, 67, 0.15)'\r\n                            }}\r\n                            onClick={clickShowNavigate}\r\n                        >\r\n                            {shownavigate ? <ChevronLeftIcon className='h-4 w-4 text-white' /> : <ChevronRightIcon className='h-4 w-4 text-white' />}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"chartdiv\" className=\"h-[100vh]\"></div>\r\n                <div className=\"bg\"></div>\r\n                <div className=\"star-field\">\r\n                    <div className=\"layer\"></div>\r\n                    <div className=\"layer\"></div>\r\n                    <div className=\"layer\"></div>\r\n                </div>\r\n                <div className='h-[100px] fixed bottom-2 right-12'>\r\n                    <img src=\"/image/main/partners.png\" alt=\"\" className='w-full h-full' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Destinations"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","Destinations","_choosedCountry$image","choosedCountry","setChoosedCountry","useState","shownavigate","setShowNavigate","t","useTranslation","colors","G","am5","O","N","citiesMn","id","title","country","distance","duration","image","geometry","type","coordinates","cities","perspectives","destinations","subcities","perspective","useEffect","window","scrollTo","top","behavior","useLayoutEffect","root","new","setThemes","am5themes_Animated","chart","container","children","push","am5map","panX","panY","projection","cont","layout","horizontalLayout","x","y","centerX","dx","centerY","text","fill","switchButton","themeTags","icon","on","get","sublineSeries","show","perspectiveSeries","subcitySeries","legend","goHome","zoomControl","set","homeButton","chartContainer","events","polygonSeries","series","geoJSON","am5geodataWorldLow","exclude","mapPolygons","template","ev","dataItem","target","dataContext","zoomAnimation","zoomToDataItem","Promise","all","waitForStop","then","results","stateSeries","backContainer","lineSeries","hide","planeSeries","lineSeriesMn","planeSeriesMn","citySeriesMn","backgroundSeries","unshift","setAll","strokeOpacity","data","animate","key","to","easing","mapLines","stroke","strokeWidth","visible","lineType","bullets","circle","radius","sprite","citySeries","pointSeriesMn","pointSeries","point1","addCity","latitude","longitude","point2","point3","lineDataItem","pushDataItem","pointsToConnect","point1Mn","addCityMn","point2Mn","lineDataItemMn","plane","svgPath","scale","planeMn","circleTemplate","tooltipText","tooltipY","interactive","cursorOverStyle","loops","Infinity","countryLabel","paddingLeft","populateText","fontWeight","fontSize","layer","event","planeDataItem","resetPlaneAnimation","isfound","forEach","element","city","issub","planeDataItemMn","mongoliaDataItem","getDataItemById","did","destinationDataItem","mainDataItem","positionOnLine","autoRotate","value","prevPosition","coords","mongoliaGeoJSON","paddingTop","paddingRight","paddingBottom","interactiveChildren","background","fillOpacity","width","height","nameField","fillField","strokeField","useDefaultMarker","dy","labels","name","color","dispose","_jsx","className","_jsxs","style","boxShadow","backgroundImage","concat","src","alt","onClick","clickShowNavigate","ChevronLeftIcon","ChevronRightIcon"],"sourceRoot":""}