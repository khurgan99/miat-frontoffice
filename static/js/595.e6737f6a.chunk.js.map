{"version":3,"file":"static/js/595.e6737f6a.chunk.js","mappings":"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","sources":["pages/Destinations.js","service/CoreFunctions.js"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from 'react';\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5map from \"@amcharts/amcharts5/map\";\r\nimport mongoliaGeoJSON from './mn.json';\r\nimport am5geodataWorldLow from \"@amcharts/amcharts5-geodata/worldLow\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\r\nimport { useIsPhone } from '../service/CoreFunctions';\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nconst Destinations = () => {\r\n    const { t } = useTranslation();\r\n    const cities = [\r\n        {\r\n            id: \"ulaanbaatar\",\r\n            title: t('ulaanbaatar'),\r\n            country: 'mongolia',\r\n            image: \"/image/main/AdobeStock_227948748.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.917, 47.9186] },\r\n            perspectives: [\r\n                \"singapore\",\r\n                \"australia\",\r\n                \"usa\",\r\n            ]\r\n        },\r\n        {\r\n            id: \"frankfurt\",\r\n            title: t('frankfurt'),\r\n            country: 'germany',\r\n            distance: '7,010 km',\r\n            duration: \"8 hours, 45 minutes\",\r\n            distanceto: '6,941 km',\r\n            durationto: \"7 hours, 34 minutes\",\r\n            image: \"/image/main/vertical-view-roemerberg-frankfurt-germany.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [8.6821, 50.1109] }\r\n        },\r\n        {\r\n            id: \"hongkong\",\r\n            title: t('hongkong'),\r\n            country: 'china',\r\n            distance: '3,350 km',\r\n            duration: \"4 hours, 10 minutes\",\r\n            distanceto: \"3,167 km\",\r\n            durationto: \"4 hours, 1 minute\",\r\n            image: \"/image/main/hong-kong-skyline-with-boats.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [114.2, 22.4] },\r\n            destinations: [\r\n                'delhi',\r\n                'mumbai',\r\n                'ho_chi_minh',\r\n                'singapore',\r\n                'perth',\r\n                'melbourne',\r\n                'sydney',\r\n                'brisbane',\r\n                'san_francisco',\r\n                'los_angeles',\r\n                'chicago',\r\n                'washington',\r\n                'new_york',\r\n                'boston',\r\n            ]\r\n        },\r\n        {\r\n            id: \"tokyo\",\r\n            title: t('tokyo'),\r\n            country: 'japan',\r\n            distance: '3,869 km',\r\n            duration: \"4 hours, 22 minutes\",\r\n            distanceto: \"3,635 km\",\r\n            durationto: \"4 hours, 45 minutes\",\r\n            image: \"/image/main/AdobeStock_268173642.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [139.6917, 35.6895] },\r\n            destinations: [\r\n                'sapporo'\r\n            ]\r\n        },\r\n        {\r\n            id: \"seoul\",\r\n            title: t('seoul'),\r\n            country: 'south_korea',\r\n            distance: '2,304 km',\r\n            duration: \"2 hours, 45 minutes\",\r\n            distanceto: \"2,276 km\",\r\n            durationto: \"3 hours, 10 minutes\",\r\n            image: \"/image/main/seoul-tower-with-gyeongbokgung-roof-red-autumn-maple-leaves-namsan-mountain-south-korea.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [126.9779, 37.5665] }\r\n        },\r\n        {\r\n            id: \"ho_chi_minh\",\r\n            title: t('ho_chi_minh'),\r\n            country: 'vietnam',\r\n            distance: '4,563 km',\r\n            duration: \"5 hours, 30 minutes\",\r\n            distanceto: \"4,595 km\",\r\n            durationto: \"5 hours, 16 minutes\",\r\n            image: \"/image/main/54455949-city-18144-167c85df43f.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.6297, 10.8231] }\r\n        },\r\n        {\r\n            id: \"istanbul\",\r\n            title: t('istanbul'),\r\n            country: 'turkey',\r\n            distance: '6,702 km',\r\n            duration: \"8 hours, 32 minutes\",\r\n            distanceto: \"6,700 km\",\r\n            durationto: \"7 hours, 30 minutes\",\r\n            image: \"/image/main/AdobeStock_304983855.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [28.90, 41.0582] },\r\n            destinations: [\r\n                'amsterdam',\r\n                'brussels',\r\n                'vienna',\r\n                'warsaw',\r\n                'zurich',\r\n                'barcelona',\r\n                'rome',\r\n                'chicago',\r\n            ]\r\n        },\r\n        {\r\n            id: \"busan\",\r\n            title: t('busan'),\r\n            country: 'south_korea',\r\n            distance: '2,593 km',\r\n            duration: \"3 hours, 1 minute\",\r\n            distanceto: \"2,630 km\",\r\n            durationto: \"3 hours, 35 minutes\",\r\n            image: \"/image/main/AdobeStock_306120806.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [129.0756, 35.1796] }\r\n        },\r\n        {\r\n            id: \"bangkok\",\r\n            title: t('bangkok'),\r\n            country: 'thailand',\r\n            distance: '4,117 km',\r\n            duration: \"5 hours, 0 minute\",\r\n            distanceto: \"4,232 km\",\r\n            durationto: \"4 hours, 51 minutes\",\r\n            image: \"/image/main/AdobeStock_105446989.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [100.5018, 13.7563] }\r\n        },\r\n        {\r\n            id: \"beijing\",\r\n            title: t('beijing'),\r\n            country: 'china',\r\n            distance: '1,383 km',\r\n            duration: \"1 hour, 50 minutes\",\r\n            distanceto: \"1,287 km\",\r\n            durationto: \"1 hour, 55 minutes\",\r\n            image: \"/image/main/AdobeStock_38307012.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [116.4074, 39.9042] }\r\n        },\r\n        {\r\n            id: \"osaka\",\r\n            title: t('osaka'),\r\n            country: 'japan',\r\n            distance: '3,221 km',\r\n            duration: \"3 hours, 50 minutes\",\r\n            distanceto: \"3,119 km\",\r\n            durationto: \"4 hour, 30 minutes\",\r\n            image: \"/image/main/osaka-castle-cherry-blossom-spring-sakura-seasons-osaka-japan.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [135.5022, 34.6937] }\r\n        },\r\n        {\r\n            id: \"phuket\",\r\n            title: t('phuket'),\r\n            country: 'thailand',\r\n            distance: '4,847 km',\r\n            duration: \"6 hours, 2 minutes\",\r\n            distanceto: \"4,915 km\",\r\n            durationto: \"5 hours, 37 minutes\",\r\n            image: \"/image/main/beautiful-girl-sitting-rock-james-bond-island-phang-nga-thailand.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [98.3381, 7.8804] }\r\n        },\r\n        {\r\n            id: \"guangzhou\",\r\n            title: t('guangzhou'),\r\n            country: 'china',\r\n            distance: '2,965 km',\r\n            duration: \"3 hours, 45 minutes\",\r\n            distanceto: \"2,908 km\",\r\n            durationto: \"3 hours, 48 minutes\",\r\n            image: \"/image/main/AdobeStock_67203423.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [113.2644, 23.1291] }\r\n        }\r\n    ];\r\n    const [choosedCountry, setChoosedCountry] = useState({});\r\n    const [shownavigate, setShowNavigate] = useState(true);\r\n    const [showDirection, setShowDirection] = useState(true);\r\n    const [point1, setpoint1] = useState(null);\r\n    const [point3data, setpoint3data] = useState(cities[0]);\r\n    const [point3, setpoint3] = useState(null);\r\n    const isphone = useIsPhone()\r\n    const colors = {\r\n        G: am5.color(\"#2652fb\"),\r\n        O: am5.color(0xFFA500),\r\n        N: am5.color(0xFF1493)\r\n    }\r\n\r\n    const citiesMn = [\r\n        {\r\n            id: \"ulaanbaatar\",\r\n            title: \"\",\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/AdobeStock_227948748.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.917, 47.9186] }\r\n        },\r\n        {\r\n            id: \"dalanzadgad\",\r\n            title: t('dalanzadgad'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"533 km\",\r\n                duration: \"49 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"578 km\",\r\n                duration: \"49 minutes\",\r\n            },\r\n            image: \"/image/main/MG_9388KhermenTsavUmnugovi.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [104.416, 43.5708] }\r\n        },\r\n        {\r\n            id: \"uliastai\",\r\n            title: t('uliastai'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"817 km\",\r\n                duration: \"1 hour, 16 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"817 km\",\r\n                duration: \"1 hour, 5 minutes\",\r\n            },\r\n            image: \"/image/main/OtgontengerZavhan.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [97.7694, 47.7417] }\r\n        },\r\n        {\r\n            id: \"khovd\",\r\n            title: t('khovd'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"1,228 km\",\r\n                duration: \"1 hour, 52 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"1,198 km\",\r\n                duration: \"1 hour, 33 minutes\",\r\n            },\r\n            image: \"/image/main/AltanHuhiiHovd.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [91.6419, 48.0056] }\r\n        },\r\n        {\r\n            id: \"altai\",\r\n            title: t('altai'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"861 km\",\r\n                duration: \"1 hour, 22 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"889 km\",\r\n                duration: \"1 hour, 13 minutes\",\r\n            },\r\n            image: \"/image/main/photo_2024-02-14_15-53-24.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [96.2491, 46.3722] }\r\n        },\r\n        {\r\n            id: \"ulaangom\",\r\n            title: t('ulaangom'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"1,150 km\",\r\n                duration: \"1 hour, 46 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"1,176 km\",\r\n                duration: \"1 hour, 31 minutes\",\r\n            },\r\n            image: \"/image/main/IMG_4013TurgenMountainsUvs.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [92.0667, 49.9811] }\r\n        },\r\n        {\r\n            id: \"murun\",\r\n            title: t('murun'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"591 km\",\r\n                duration: \"59 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"593 km\",\r\n                duration: \"49 minutes\",\r\n            },\r\n            image: \"/image/main/DJI_0077.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [100.155, 49.6342] }\r\n        },\r\n        {\r\n            id: \"ulgii\",\r\n            title: t('ulgii'),\r\n            country: \"Mongolia\",\r\n            to: {\r\n                distance: \"1,260 km\",\r\n                duration: \"1 hour 53 minutes\",\r\n            },\r\n            from: {\r\n                distance: \"1,342 km\",\r\n                duration: \"1 hour 51 minutes\",\r\n            },\r\n            image: \"/image/main/BagaturgeniiuulsBayanUlgii.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [89.9674, 48.9683] }\r\n        },\r\n    ];\r\n\r\n    const overtime = {\r\n        beijing: {\r\n            frankfurt: \"10 hours\",\r\n            istanbul: \"11 hours, 50 minutes\",\r\n        },\r\n        frankfurt: {\r\n            beijing: \"1 hour\",\r\n            seoul: \"3 hours, 30 minutes\",\r\n            tokyo: \"2 hours, 35 minutes\",\r\n            hongkong: \"1 hour, 10 minutes\",\r\n            guangzhou: \"15 hours, 45 minutes\",\r\n            busan: \"2 hours, 20 minutes\",\r\n            osaka: \"7 hours, 50 minutes\"\r\n        },\r\n        seoul: {\r\n            frankfurt: \"22 hours, 40 minutes\",\r\n            istanbul: \"17 hours\",\r\n        },\r\n        tokyo: {\r\n            frankfurt: \"12 hours\",\r\n            istanbul: \"12 hours, 40 minutes\",\r\n        },\r\n        hongkong: {\r\n            frankfurt: \"16 hours\"\r\n        },\r\n        istanbul: {\r\n            beijing: \"2 hours, 40 minutes\",\r\n            seoul: \"5 hours, 10 minutes\",\r\n            tokyo: \"4 hours, 14 minutes\",\r\n            hongkong: \"2 hour, 50 minutes\",\r\n            guangzhou: \"17 hours, 35 minutes\",\r\n            busan: \"4 hours\",\r\n            osaka: \"6 hours, 30 minutes\"\r\n        },\r\n    };\r\n    const subcities = [\r\n        {\r\n            id: \"amsterdam\",\r\n            title: t('amsterdam'),\r\n            country: 'netherlands',\r\n            geometry: { type: \"Point\", coordinates: [4.9041, 52.3676] }\r\n        },\r\n        {\r\n            id: \"brussels\",\r\n            title: t('brussels'),\r\n            country: 'belgium',\r\n            geometry: { type: \"Point\", coordinates: [4.3517, 50.8503] }\r\n        },\r\n        {\r\n            id: \"vienna\",\r\n            title: t('vienna'),\r\n            country: 'austria',\r\n            geometry: { type: \"Point\", coordinates: [16.3738, 48.2082] }\r\n        },\r\n        {\r\n            id: \"warsaw\",\r\n            title: t('warsaw'),\r\n            country: 'poland',\r\n            geometry: { type: \"Point\", coordinates: [21.0122, 52.2298] }\r\n        },\r\n        {\r\n            id: \"zurich\",\r\n            title: t('zurich'),\r\n            country: 'switzerland',\r\n            geometry: { type: \"Point\", coordinates: [8.5417, 47.3769] }\r\n        },\r\n        {\r\n            id: \"barcelona\",\r\n            title: t('barcelona'),\r\n            country: 'spain',\r\n            geometry: { type: \"Point\", coordinates: [2.1734, 41.3851] }\r\n        },\r\n        {\r\n            id: \"rome\",\r\n            title: t('rome'),\r\n            country: 'italy',\r\n            geometry: { type: \"Point\", coordinates: [12.4964, 41.9028] }\r\n        },\r\n        {\r\n            id: \"chicago\",\r\n            title: t('chicago'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-87.6298, 41.8781] }\r\n        },\r\n        {\r\n            id: \"delhi\",\r\n            title: t('delhi'),\r\n            country: 'india',\r\n            geometry: { type: \"Point\", coordinates: [77.2090, 28.6139] }\r\n        },\r\n        {\r\n            id: \"mumbai\",\r\n            title: t('mumbai'),\r\n            country: 'india',\r\n            geometry: { type: \"Point\", coordinates: [72.8777, 19.0760] }\r\n        },\r\n        {\r\n            id: \"ho_chi_minh\",\r\n            title: t('ho_chi_minh'),\r\n            country: 'vietnam',\r\n            geometry: { type: \"Point\", coordinates: [106.6602, 10.7629] }\r\n        },\r\n        {\r\n            id: \"singapore\",\r\n            title: t('singapore'),\r\n            country: 'singapore',\r\n            geometry: { type: \"Point\", coordinates: [103.8198, 1.3521] }\r\n        },\r\n        {\r\n            id: \"perth\",\r\n            title: t('perth'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [115.8575, -31.9505] }\r\n        },\r\n        {\r\n            id: \"melbourne\",\r\n            title: t('melbourne'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [144.9631, -37.8136] }\r\n        },\r\n        {\r\n            id: \"sydney\",\r\n            title: t('sydney'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [151.2093, -33.8688] }\r\n        },\r\n        {\r\n            id: \"brisbane\",\r\n            title: t('brisbane'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [153.0251, -27.4698] }\r\n        },\r\n        {\r\n            id: \"san_francisco\",\r\n            title: t('san_francisco'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-122.4194, 37.7749] }\r\n        },\r\n        {\r\n            id: \"los_angeles\",\r\n            title: t('los_angeles'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-118.2437, 34.0522] }\r\n        },\r\n        {\r\n            id: \"washington\",\r\n            title: t('washington'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-77.0369, 38.9072] }\r\n        },\r\n        {\r\n            id: \"new_york\",\r\n            title: t('new_york'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-74.0060, 40.7128] }\r\n        },\r\n        {\r\n            id: \"boston\",\r\n            title: t('boston'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-71.0589, 42.3601] }\r\n        },\r\n        {\r\n            id: \"sapporo\",\r\n            title: t('sapporo'),\r\n            country: 'japan',\r\n            geometry: { type: \"Point\", coordinates: [141.3544, 43.0618] }\r\n        },\r\n        {\r\n            id: \"singapore\",\r\n            title: t('singapore'),\r\n            country: 'singapore',\r\n            geometry: { type: \"Point\", coordinates: [103.8198, 1.3521] },\r\n            perspective: true\r\n        },\r\n        {\r\n            id: \"australia\",\r\n            title: t('australia'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [133.7751, -25.2744] },\r\n            perspective: true,\r\n        },\r\n        {\r\n            id: \"usa\",\r\n            title: t('usa'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-98.5795, 39.8283] },\r\n            perspective: true,\r\n        }\r\n    ];\r\n\r\n    const clickShowNavigate = () => {\r\n        setShowNavigate(!shownavigate)\r\n    }\r\n\r\n    const changePoint1 = (event) => {\r\n        const data = event.value;\r\n        setChoosedCountry(data)\r\n        if (point3data.id === 'ulaanbaatar') {\r\n            point3.setAll({\r\n                longitude: data.geometry.coordinates[0],\r\n                latitude: data.geometry.coordinates[1]\r\n            })\r\n        }\r\n        point1.setAll({\r\n            longitude: data.geometry.coordinates[0],\r\n            latitude: data.geometry.coordinates[1]\r\n        })\r\n    }\r\n\r\n    const changePoint3 = (event) => {\r\n        const data = event.value;\r\n        setpoint3data(data)\r\n        point3.setAll({\r\n            longitude: data.geometry.coordinates[0],\r\n            latitude: data.geometry.coordinates[1]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        let root = am5.Root.new(\"chartdiv\");\r\n        const countryLabels = [];\r\n        // Set themes\r\n        root.setThemes([\r\n            am5themes_Animated.new(root)\r\n        ]);\r\n\r\n        var chart = root.container.children.push(\r\n            am5map.MapChart.new(root, {\r\n                panX: \"rotateX\",\r\n                panY: \"rotateY\",\r\n                projection: am5map.geoOrthographic(),\r\n                paddingLeft: 20,\r\n                paddingRight: 20,\r\n                paddingTop: 20,\r\n                paddingBottom: 20,\r\n            })\r\n        );\r\n\r\n        var cont = chart.children.push(am5.Container.new(root, {\r\n            layout: root.horizontalLayout,\r\n            x: am5.p100,\r\n            y: 100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n        }));\r\n\r\n        // Add labels and controls\r\n        cont.children.push(am5.Label.new(root, {\r\n            centerY: am5.p50,\r\n            text: t('scheduled_routes'),\r\n            fill: am5.color(0xffffff),\r\n            fontWeight: \"bold\",\r\n            fontSize: 12,\r\n        }));\r\n\r\n        var switchButton = cont.children.push(am5.Button.new(root, {\r\n            themeTags: [\"switch\"],\r\n            centerY: am5.p50,\r\n            icon: am5.Circle.new(root, {\r\n                themeTags: [\"icon\"]\r\n            })\r\n        }));\r\n\r\n        cont.children.push(\r\n            am5.Label.new(root, {\r\n                centerY: am5.p50,\r\n                text: t('codeshare_routes'),\r\n                fill: am5.color(0xffffff),\r\n                fontWeight: \"bold\",\r\n                fontSize: 12,\r\n            })\r\n        );\r\n\r\n        switchButton.on(\"active\", function () {\r\n            if (!switchButton.get(\"active\")) {\r\n                goHome()\r\n            } else {\r\n                sublineSeries.show()\r\n                perspectiveSeries.show()\r\n                subcitySeries.show()\r\n                legend.show()\r\n                setShowDirection(false)\r\n            }\r\n        });\r\n\r\n        const buttonSettings = {\r\n            paddingBottom: 1,\r\n            paddingTop: 1,\r\n            paddingRight: 1,\r\n            paddingLeft: 2,\r\n            x: am5.p100,\r\n            y: 100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n        }\r\n        let button2 = root.container.children.push(\r\n            am5.Button.new(root, {\r\n                ...buttonSettings,\r\n                y: 140,\r\n                label: am5.Label.new(root, {\r\n                    text: t('domestic'),\r\n                    centerY: am5.p50,\r\n                    fontSize: 14\r\n                }),\r\n                // icon: am5.Graphics.new(root, plane2),\r\n                icon: am5.Picture.new(root, {\r\n                    interactive: true,\r\n                    src: \"/image/main/mongolia.png\",\r\n                    cursorOverStyle: \"pointer\",\r\n                    width: 50,\r\n                    centerY: am5.p50  // Center vertically\r\n                }),\r\n                cursorOverStyle: \"pointer\",\r\n            })\r\n        );\r\n\r\n        button2.get(\"background\").setAll({\r\n            fill: am5.color(0x000000),\r\n            fillOpacity: 0.4\r\n        });\r\n\r\n        button2.events.on(\"click\", function () {\r\n            gotoMongolia()\r\n        });\r\n\r\n        let zoomControl = chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\r\n        zoomControl.homeButton.set(\"visible\", true);\r\n        chart.chartContainer.get(\"background\").events.on(\"click\", function () {\r\n            goHome();\r\n        })\r\n\r\n        zoomControl.homeButton.events.on(\"click\", function () {\r\n            goHome();\r\n        })\r\n\r\n        // Create polygon series\r\n        var polygonSeries = chart.series.push(\r\n            am5map.MapPolygonSeries.new(root, {\r\n                geoJSON: am5geodataWorldLow,\r\n                exclude: [\"AQ\"]\r\n            })\r\n        );\r\n\r\n        polygonSeries.mapPolygons.template.setAll({\r\n            strokeWidth: 0.5,\r\n            templateField: \"polygonSettings\",\r\n            stroke: root.interfaceColors.get(\"background\")\r\n        });\r\n\r\n        polygonSeries.mapPolygons.template.events.on(\"click\", (ev) => {\r\n            var dataItem = ev.target.dataItem;\r\n            var data = dataItem.dataContext;\r\n            if (data.id === 'MN') {\r\n                gotoMongolia(dataItem)\r\n            }\r\n        });\r\n\r\n        var backgroundSeries = chart.series.unshift(\r\n            am5map.MapPolygonSeries.new(root, {})\r\n        );\r\n\r\n        backgroundSeries.mapPolygons.template.setAll({\r\n            fill: am5.color(\"#00000080\"),\r\n            strokeOpacity: 0\r\n        });\r\n\r\n        backgroundSeries.data.push({\r\n            geometry: am5map.getGeoRectangle(90, 180, -90, -180)\r\n        });\r\n\r\n        chart.animate({ key: \"rotationX\", to: -80.8467, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });\r\n        chart.animate({ key: \"rotationY\", to: -20.8625, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });\r\n\r\n        // this will be invisible line (note strokeOpacity = 0) along which invisible points will animate\r\n        let lineSeries = chart.series.push(am5map.MapLineSeries.new(root, {}));\r\n        lineSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: am5.color(\"#2259ff\"),\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let sublineSeries = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            visible: false\r\n        }));\r\n        sublineSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: colors.O,\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let perspectiveSeries = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            visible: false\r\n        }));\r\n        perspectiveSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: colors.N,\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let lineSeriesMn = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            lineType: \"curved\",\r\n            visible: false,\r\n        }));\r\n\r\n        lineSeriesMn.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: am5.color(\"#FFD700\"),\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let animatedBulletSeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {})\r\n        );\r\n\r\n        animatedBulletSeries.bullets.push(function () {\r\n            let circle = am5.Circle.new(root, {\r\n                radius: 0\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: circle\r\n            });\r\n        });\r\n\r\n        // destination series\r\n        let citySeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {})\r\n        );\r\n\r\n        let subcitySeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {\r\n                visible: false,\r\n            })\r\n        );\r\n\r\n        let citySeriesMn = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {\r\n                visible: false,\r\n            })\r\n        );\r\n\r\n        let pointSeriesMn = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n        let planeSeriesMn = chart.series.push(am5map.MapPointSeries.new(root, {\r\n            visible: false,\r\n        }));\r\n        let planeSeries = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n        let pointSeries = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n\r\n        let point1 = null;\r\n        let point2 = addCity({ latitude: 47.9186, longitude: 106.917 }, \"Ulaanbaatar\");\r\n        let point3 = null;\r\n\r\n        if (choosedCountry.id) {\r\n            point1 = addCity({\r\n                latitude: choosedCountry.geometry.coordinates[1],\r\n                longitude: choosedCountry.geometry.coordinates[0]\r\n            }, \"Frankfurt\");\r\n            point3 = addCity({\r\n                latitude: choosedCountry.geometry.coordinates[1],\r\n                longitude: choosedCountry.geometry.coordinates[0]\r\n            }, \"Frankfurt\");\r\n        } else {\r\n            point1 = addCity({ latitude: 50.1109, longitude: 8.6821 }, \"Frankfurt\");\r\n            point3 = addCity({ latitude: 50.1109, longitude: 8.6821 }, \"Frankfurt\");\r\n        }\r\n\r\n        setpoint1(point1)\r\n        setpoint3(point3)\r\n\r\n        let lineDataItem = lineSeries.pushDataItem({\r\n            pointsToConnect: [point1, point2, point3]\r\n        });\r\n\r\n        const point1Mn = addCityMn({ latitude: 47.9186, longitude: 106.917 }, \"Ulaanbaatar\");\r\n        let lineDataItemMn = lineSeriesMn.pushDataItem({\r\n            geometry: createArcLine({\r\n                latitude: point1Mn.get(\"latitude\"),\r\n                longitude: point1Mn.get(\"longitude\")\r\n            }, {\r\n                latitude: 48.0056, longitude: 91.6419\r\n            }, 0.1)\r\n        });\r\n\r\n        let plane = am5.Graphics.new(root, {\r\n            svgPath:\r\n                \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\",\r\n            scale: 0.07,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            fill: am5.color('#fcffff')\r\n        });\r\n\r\n        let planeMn = am5.Graphics.new(root, {\r\n            svgPath:\r\n                \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\",\r\n            scale: 0.07,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            fill: am5.color('#fcffff')\r\n        });\r\n\r\n        planeSeries.bullets.push(function () {\r\n            let container = am5.Container.new(root, {});\r\n            container.children.push(plane);\r\n            return am5.Bullet.new(root, { sprite: container });\r\n        });\r\n\r\n        planeSeriesMn.bullets.push(function () {\r\n            let container = am5.Container.new(root, {});\r\n            container.children.push(planeMn);\r\n            return am5.Bullet.new(root, { sprite: container });\r\n        });\r\n\r\n        let circleTemplate = am5.Template.new({});\r\n\r\n        // visible city circles\r\n        citySeries.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n            const data = dataItem.dataContext;\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: data.id === 'ulaanbaatar' ? am5.color(\"#FFD700\") : am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(0xffffff), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.1,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 2,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1000, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: isphone ? 12 : 14,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    layer: 5,\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n            countryLabels.push(countryLabel)\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItem.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setChoosedCountry(data);\r\n                setShowNavigate(true)\r\n                if (data.id !== 'ulaanbaatar') {\r\n                    point1.setAll({\r\n                        longitude: data.geometry.coordinates[0],\r\n                        latitude: data.geometry.coordinates[1]\r\n                    })\r\n                    point3.setAll({\r\n                        longitude: data.geometry.coordinates[0],\r\n                        latitude: data.geometry.coordinates[1]\r\n                    })\r\n                }\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n        citySeries.data.setAll(cities);\r\n\r\n        subcitySeries.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n            const data = dataItem.dataContext;\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: data.perspective ? colors.N : colors.O, // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(0xffffff), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 2,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1000, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    layer: 5,\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n            countryLabels.push(countryLabel)\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                setShowNavigate(false)\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n\r\n        subcitySeries.data.setAll(subcities);\r\n\r\n        citySeriesMn.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    layer: 100,\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(0xffffff), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 2,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n            circle.set(\"layer\", 200);\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1500, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    layer: 100,\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n            countryLabels.push(countryLabel)\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                if (data.id !== 'ulaanbaatar') {\r\n                    planeDataItemMn.set(\"positionOnLine\", 0);\r\n                    lineDataItemMn = lineSeriesMn.pushDataItem({\r\n                        geometry: createArcLine({\r\n                            latitude: point1Mn.get(\"latitude\"),\r\n                            longitude: point1Mn.get(\"longitude\")\r\n                        }, {\r\n                            longitude: data.geometry.coordinates[0],\r\n                            latitude: data.geometry.coordinates[1]\r\n                        }, 0.1)\r\n                    });\r\n                    planeDataItemMn.set(\"lineDataItem\", lineDataItemMn);\r\n                    // planeDataItem.clear();\r\n                    resetPlaneAnimationMn()\r\n                }\r\n\r\n                setChoosedCountry(data);\r\n                setShowNavigate(true)\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n        citySeriesMn.data.setAll(citiesMn);\r\n        // Prepare line series data\r\n        let mongoliaDataItem = citySeries.getDataItemById(\"ulaanbaatar\");\r\n\r\n        function createArcLine(start, end, curvature = 0.7, segments = 30) {\r\n            let coords = [];\r\n            for (let i = 0; i <= segments; i++) {\r\n                let t = i / segments;\r\n                let arcFactor = Math.sin(t * Math.PI) * curvature; // Муруйлтын нөлөөлөл\r\n                let lat = start.latitude + (end.latitude - start.latitude) * t + arcFactor * 10;\r\n                let lon = start.longitude + (end.longitude - start.longitude) * t;\r\n                coords.push([lon, lat]);\r\n            }\r\n            return {\r\n                type: \"MultiLineString\",\r\n                coordinates: [coords]\r\n            };\r\n        }\r\n\r\n        am5.array.each(citiesMn, function (did) {\r\n            if (did.id !== 'ulaanbaatar') {\r\n                let destinationDataItem = citySeriesMn.getDataItemById(did.id);\r\n                // let lineDataItem = lineSeriesMn.pushDataItem({});\r\n                // lineDataItem.set(\"pointsToConnect\", [mongoliaDataItem, destinationDataItem])\r\n\r\n                let startPoint = {\r\n                    latitude: mongoliaDataItem.get(\"latitude\"),\r\n                    longitude: mongoliaDataItem.get(\"longitude\")\r\n                };\r\n\r\n                let endPoint = {\r\n                    latitude: destinationDataItem.get(\"latitude\"),\r\n                    longitude: destinationDataItem.get(\"longitude\")\r\n                };\r\n\r\n                lineSeriesMn.pushDataItem({\r\n                    geometry: createArcLine(startPoint, endPoint, 0.1) // 0.7 муруйлттай\r\n                });\r\n            }\r\n        });\r\n\r\n        // this will do all the animations\r\n        am5.array.each(cities, function (did) {\r\n            let destinationDataItem = citySeries.getDataItemById(did.id);\r\n            let lineDataItem = lineSeries.pushDataItem({});\r\n            lineDataItem.set(\"pointsToConnect\", [mongoliaDataItem, destinationDataItem])\r\n        });\r\n\r\n        am5.array.each(cities, function (did) {\r\n            if (did.destinations) {\r\n                let mainDataItem = citySeries.getDataItemById(did.id);\r\n                did.destinations.forEach(element => {\r\n                    let lineDataItem = sublineSeries.pushDataItem({});\r\n                    let destinationDataItem = subcitySeries.getDataItemById(element);\r\n                    lineDataItem.set(\"pointsToConnect\", [mainDataItem, destinationDataItem])\r\n                });\r\n            }\r\n            if (did.perspectives) {\r\n                let mainDataItem = citySeries.getDataItemById(did.id);\r\n                did.perspectives.forEach(element => {\r\n                    let lineDataItem = perspectiveSeries.pushDataItem({});\r\n                    let destinationDataItem = subcitySeries.getDataItemById(element);\r\n                    lineDataItem.set(\"pointsToConnect\", [mainDataItem, destinationDataItem])\r\n                });\r\n            }\r\n        });\r\n\r\n        let planeDataItem = planeSeries.pushDataItem({\r\n            lineDataItem,\r\n            positionOnLine: 0,\r\n            autoRotate: true\r\n        });\r\n\r\n        planeDataItem.dataContext = {};\r\n        let planeDataItemMn = planeSeriesMn.pushDataItem({\r\n            lineDataItem: lineDataItemMn,\r\n            positionOnLine: 0,\r\n            autoRotate: true\r\n        });\r\n\r\n        planeDataItemMn.dataContext = {};\r\n        resetPlaneAnimation()\r\n        resetPlaneAnimationMn()\r\n\r\n        function resetPlaneAnimation() {\r\n            // Re-animate the plane along the line\r\n            planeDataItem.animate({\r\n                key: \"positionOnLine\",\r\n                to: 1,\r\n                duration: 30000, // Adjust duration as needed\r\n                loops: Infinity, // Make sure it loops if desired\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth yoyo animation\r\n            });\r\n\r\n            // Update the rotation based on position\r\n            planeDataItem.on(\"positionOnLine\", (value) => {\r\n                if (planeDataItem.dataContext.prevPosition < value) {\r\n                    plane.set(\"rotation\", 0);\r\n                }\r\n\r\n                if (planeDataItem.dataContext.prevPosition > value) {\r\n                    plane.set(\"rotation\", -180);\r\n                }\r\n                planeDataItem.dataContext.prevPosition = value;\r\n            });\r\n        }\r\n\r\n        function resetPlaneAnimationMn() {\r\n            planeDataItemMn.animate({\r\n                key: \"positionOnLine\",\r\n                to: 1,\r\n                duration: 30000, // Adjust duration as needed\r\n                loops: Infinity, // Make sure it loops if desired\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth yoyo animation\r\n            });\r\n\r\n            // Update the rotation based on position\r\n            planeDataItemMn.on(\"positionOnLine\", (value) => {\r\n                if (planeDataItemMn.dataContext.prevPosition < value) {\r\n                    planeMn.set(\"rotation\", 0);\r\n                }\r\n\r\n                if (planeDataItemMn.dataContext.prevPosition > value) {\r\n                    planeMn.set(\"rotation\", -180);\r\n                }\r\n                planeDataItemMn.dataContext.prevPosition = value;\r\n            });\r\n        }\r\n\r\n        function addCity(coords, title) {\r\n            return pointSeries.pushDataItem({\r\n                latitude: coords.latitude,\r\n                longitude: coords.longitude\r\n            });\r\n        }\r\n\r\n        function addCityMn(coords, title) {\r\n            return pointSeriesMn.pushDataItem({\r\n                latitude: coords.latitude,\r\n                longitude: coords.longitude\r\n            });\r\n        }\r\n\r\n        function goHome() {\r\n            chart.goHome();\r\n            stateSeries.hide();\r\n            backContainer.hide();\r\n            lineSeriesMn.hide();\r\n            planeSeriesMn.hide();\r\n            citySeriesMn.hide();\r\n            lineSeries.show()\r\n            planeSeries.show()\r\n            sublineSeries.hide()\r\n            perspectiveSeries.hide()\r\n            subcitySeries.hide()\r\n            legend.hide()\r\n            cont.show()\r\n            button2.show()\r\n            setShowDirection(true)\r\n            setChoosedCountry({})\r\n            planeDataItem.set(\"positionOnLine\", 0);\r\n            resetPlaneAnimation()\r\n            switchButton.set(\"active\", false)\r\n        }\r\n\r\n        var stateSeries = chart.series.push(am5map.MapPolygonSeries.new(root, {\r\n            visible: false,\r\n            geoJSON: mongoliaGeoJSON\r\n        }));\r\n\r\n        stateSeries.mapPolygons.template.setAll({\r\n            fill: am5.color(0x6771DC),\r\n            templateField: \"polygonSettings\"\r\n        });\r\n\r\n        var backContainer = chart.children.push(am5.Container.new(root, {\r\n            x: am5.p100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n            paddingTop: 2,\r\n            paddingRight: 10,\r\n            paddingBottom: 2,\r\n            y: 100,\r\n            interactiveChildren: false,\r\n            layout: root.horizontalLayout,\r\n            cursorOverStyle: \"pointer\",\r\n            background: am5.RoundedRectangle.new(root, {\r\n                fill: am5.color(0xffffff),\r\n                fillOpacity: 0.2\r\n            }),\r\n            visible: false\r\n        }));\r\n\r\n        backContainer.children.push(am5.Label.new(root, {\r\n            text: \"Back\",\r\n            centerY: am5.p50,\r\n            fill: am5.color(0xffffff)\r\n        }));\r\n\r\n        backContainer.children.push(am5.Graphics.new(root, {\r\n            width: 32,\r\n            height: 32,\r\n            centerY: am5.p50,\r\n            fill: am5.color(0xffffff),\r\n            svgPath: \"M12 9.059V6.5a1.001 1.001 0 0 0-1.707-.708L4 12l6.293 6.207a.997.997 0 0 0 1.414 0A.999.999 0 0 0 12 17.5v-2.489c2.75.068 5.755.566 8 3.989v-1c0-4.633-3.5-8.443-8-8.941z\"\r\n        }));\r\n\r\n        backContainer.events.on(\"click\", function () {\r\n            goHome();\r\n        });\r\n\r\n        let legend = chart.children.push(am5.Legend.new(root, {\r\n            visible: false,\r\n            nameField: \"name\",\r\n            fillField: \"color\",\r\n            strokeField: \"color\",\r\n            useDefaultMarker: true,\r\n            centerX: am5.p50,\r\n            x: am5.p50,\r\n            centerY: am5.p100,\r\n            y: am5.p100,\r\n            dy: -20,\r\n            background: am5.RoundedRectangle.new(root, {\r\n                fill: am5.color(0xffffff),\r\n                fillOpacity: 0.2\r\n            })\r\n        }));\r\n\r\n        legend.labels.template.setAll({\r\n            fill: am5.color(0xffffff) // White text color\r\n        });\r\n\r\n        legend.data.setAll([{\r\n            name: t(\"scheduled_routes\"),\r\n            color: colors.G,\r\n        }, {\r\n            name: t(\"codeshare_routes\"),\r\n            color: colors.O\r\n        }, {\r\n            name: t(\"perspective\"),\r\n            color: colors.N\r\n        }]);\r\n\r\n        function gotoMongolia() {\r\n            var dataItem = polygonSeries.getDataItemById('MN');\r\n            setChoosedCountry({})\r\n            var zoomAnimation = polygonSeries.zoomToDataItem(dataItem);\r\n            Promise.all([\r\n                zoomAnimation.waitForStop(),\r\n            ]).then(function (results) {\r\n                stateSeries.show();\r\n                // polygonSeries.hide(100)\r\n                backContainer.show();\r\n                lineSeries.hide()\r\n                planeSeries.hide()\r\n                sublineSeries.hide()\r\n                perspectiveSeries.hide()\r\n                legend.hide()\r\n                button2.hide()\r\n                planeDataItemMn.set(\"positionOnLine\", 0);\r\n                resetPlaneAnimationMn()\r\n                lineSeriesMn.set(\"layer\", 100);\r\n                planeSeriesMn.set(\"layer\", 100);\r\n                citySeriesMn.set(\"layer\", 100);\r\n                // pointSeriesMn.show();\r\n                lineSeriesMn.show();\r\n                planeSeriesMn.show();\r\n                citySeriesMn.show();\r\n                cont.hide()\r\n                setShowDirection(false)\r\n                setpoint3data(cities[0]);\r\n            });\r\n        }\r\n\r\n        chart.appear(1000, 100);\r\n\r\n        return () => {\r\n            root.dispose();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className='min-h-[100vh]'>\r\n            <div className={`w-[100%] h-full`}>\r\n\r\n                <div className={classNames(\r\n                    choosedCountry.title ? 'opacity-100' : 'opacity-0',\r\n                    'transition-opacity ease-in-out delay-150 duration-300'\r\n                )}>\r\n                    <div\r\n                        className={\r\n                            classNames(\r\n                                'transition absolute bg-black/30 w-[22rem] h-full text-white pt-20',\r\n                                'backdrop-blur-md space-y-2 shadow-md z-10 duration-500',\r\n                                shownavigate ? 'translate-x-0' : '-translate-x-full'\r\n                            )}\r\n                        style={{\r\n                            boxShadow: \"0 1px 2px rgba(60,64,67,0.3),0 2px 6px 2px rgba(60,64,67,0.15)\"\r\n                        }}\r\n                    >\r\n                        {/* <div className='text-center'>\r\n                                    {t('ulaanbaatar')} - {t(choosedCountry.id)}\r\n                                </div> */}\r\n                        <div className=\"flex flex-col justify-between h-full overflow-y-auto px-4\">\r\n                            <div>\r\n                                {showDirection && <div className='flex mb-2'>\r\n                                    <DropDownList\r\n                                        data={cities}\r\n                                        textField='title'\r\n                                        value={choosedCountry}\r\n                                        onChange={changePoint1}\r\n                                    />\r\n                                    <div className='w-16 mx-2'>\r\n                                        <img src=\"/image/main/35456.png\" alt=\"\" className='w-full' />\r\n                                    </div>\r\n                                    <DropDownList\r\n                                        data={cities}\r\n                                        textField='title'\r\n                                        value={point3data}\r\n                                        onChange={changePoint3}\r\n                                    />\r\n                                </div>}\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${choosedCountry.image ?? \"/image/main/plane-500.jpg\"})` }}\r\n                                    className='rounded-md bg-cover bg-center bg-no-repeat h-44 w-full'\r\n                                >\r\n                                    {/* <img src={choosedCountry.image ?? \"/image/main/plane-500.jpg\"} alt=\"\"\r\n                                                className=\"rounded-md h-60\"\r\n                                            /> */}\r\n                                </div>\r\n                                {choosedCountry.image && <div className='text-justify text-sm mt-4'>\r\n                                    {t(choosedCountry.id + 'desc')}\r\n                                </div>}\r\n                            </div>\r\n                            <div>\r\n                                {\r\n                                    (point3data.id !== 'ulaanbaatar' && choosedCountry.id !== 'ulaanbaatar') ? <>\r\n                                        <div className='text-right pt-3 font-bold'>\r\n                                            {t(point3data.id)}\r\n                                        </div>\r\n                                        <div className='relative'>\r\n                                            <div className='text-xs absolute right-[5%] bg-black/30 p-1 top-14 rounded backdrop-blur-md'>\r\n                                                <div className='absolute -top-2 left-[50%]'>\r\n                                                    <span className=\"relative flex h-3 w-3 mx-auto -z-[1]\">\r\n                                                        <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75\"></span>\r\n                                                        <span className=\"relative h-3 w-3 rounded-full bg-sky-500\"></span>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className='flex'>\r\n                                                    <div>Distance: &nbsp;</div>\r\n                                                    <div className='font-medium'>{point3data.distance}</div>\r\n                                                </div>\r\n                                                <div className='text-justify'>Total travel time: <p className='font-medium'>\r\n                                                    {point3data.duration}\r\n                                                </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <img src=\"/logos/some/flight-3.png\" alt=\"\" className='h-64' />\r\n                                        {overtime?.[choosedCountry.id]?.[point3data.id] && <div className=\"relative\">\r\n                                            <div className='text-xs absolute bg-black/30 bottom-32 p-1 rounded backdrop-blur-md'>\r\n                                                <div className='text-justify'>\r\n                                                    Stopover time:\r\n                                                    <p className='font-medium'>\r\n                                                        {overtime?.[choosedCountry.id]?.[point3data.id]}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                        <div className='relative bottom-[8rem] text-right pr-20 font-bold text-lg'>\r\n                                            {t('ulaanbaatar')}\r\n                                        </div>\r\n                                        <div className='font-bold -mt-8'>\r\n                                            {t(choosedCountry.id)}\r\n                                        </div>\r\n                                        <div className='relative'>\r\n                                            <div className='text-xs absolute right-[45%] bg-black/30 bottom-8 p-1 rounded backdrop-blur-md'>\r\n                                                <div className='absolute -top-2 left-[50%]'>\r\n                                                    <span className=\"relative flex h-3 w-3 mx-auto -z-[1]\">\r\n                                                        <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75\"></span>\r\n                                                        <span className=\"relative h-3 w-3 rounded-full bg-sky-500\"></span>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className='flex'>\r\n                                                    <div>Distance: &nbsp;</div>\r\n                                                    <div className='font-medium'>{choosedCountry.distanceto}</div>\r\n                                                </div>\r\n                                                <div className='text-justify'>Total travel time: <p className='font-medium'>\r\n                                                    {choosedCountry.durationto}\r\n                                                </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </> : <>\r\n                                        <div className='text-right -mb-4 font-bold'>\r\n                                            {choosedCountry.id === 'ulaanbaatar' ? t(point3data.id) : t('ulaanbaatar')}\r\n                                        </div>\r\n                                        {((choosedCountry.id === 'ulaanbaatar' && point3data.distance) || choosedCountry.to) && <div className='relative'>\r\n                                            <div className='text-xs absolute top-6 bg-black/30 p-1 rounded backdrop-blur-md'>\r\n                                                <div className='absolute -top-2 left-[50%]'>\r\n                                                    <span className=\"relative flex h-3 w-3 mx-auto -z-[1]\">\r\n                                                        <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75\"></span>\r\n                                                        <span className=\"relative h-3 w-3 rounded-full bg-sky-500\"></span>\r\n                                                    </span>\r\n                                                </div>\r\n                                                {choosedCountry.id === 'ulaanbaatar' ? <div className='font-medium'>{t(choosedCountry.id)}&rarr;{t(point3data.id)}</div> :\r\n                                                    <div className='font-medium'>{t(choosedCountry.id)}&rarr;{t('ulaanbaatar')}</div>}\r\n                                                <hr />\r\n                                                <div className='flex'>\r\n                                                    <div>Distance: &nbsp;</div>\r\n                                                    <div className='font-medium'>{choosedCountry.id === 'ulaanbaatar' ? point3data.distance : choosedCountry.to.distance}</div>\r\n                                                </div>\r\n                                                <div className='text-justify'>Total travel time: <p className='font-medium'>\r\n                                                    {choosedCountry.id === 'ulaanbaatar' ? point3data.duration : choosedCountry.to.duration}\r\n                                                </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                        <img src=\"/logos/some/flight2point.png\" alt=\"\" className='h-64' />\r\n                                        <div className='font-bold'>\r\n                                            {t(choosedCountry.id)}\r\n                                        </div>\r\n                                        {(choosedCountry.from || choosedCountry.distance) && <div className='relative'>\r\n                                            <div className='text-xs absolute right-[30%] bg-black/30 bottom-12 p-1 rounded backdrop-blur-md'>\r\n                                                <div className='absolute -top-2 left-[50%]'>\r\n                                                    <span className=\"relative flex h-3 w-3 mx-auto -z-[1]\">\r\n                                                        <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75\"></span>\r\n                                                        <span className=\"relative h-3 w-3 rounded-full bg-sky-500\"></span>\r\n                                                    </span>\r\n                                                </div>\r\n                                                {choosedCountry.from && <>\r\n                                                    <div className='font-medium'>{t('ulaanbaatar')}&rarr;{t(choosedCountry.id)}</div>\r\n                                                    <hr />\r\n                                                </>}\r\n                                                <div className='flex'>\r\n                                                    <div>Distance: &nbsp;</div>\r\n                                                    <div className='font-medium'>{choosedCountry.from ? choosedCountry.from.distance : choosedCountry.distanceto}</div>\r\n                                                </div>\r\n                                                <div className='text-justify'>Total travel time: <p className='font-medium'>\r\n                                                    {choosedCountry.from ? choosedCountry.from.duration : choosedCountry.durationto}\r\n                                                </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    </>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\r\n                        classNames(\r\n                            'transition absolute left-[22rem] top-[calc(50%-24px)] block z-10 duration-500',\r\n                            shownavigate ? 'translate-x-0' : '-translate-x-[22rem]'\r\n                        )\r\n                    }>\r\n                        <button\r\n                            className={classNames(\r\n                                'h-[48px] w-[23px] bg-black/30 backdrop-blur-md cursor-pointer hover:bg-primary-700',\r\n                                'rounded-r-full border-l border-l-primary-600'\r\n                            )}\r\n                            style={{\r\n                                boxShadow: '0 1px 2px rgba(60, 64, 67, 0.3), 0 2px 6px 2px rgba(60, 64, 67, 0.15)'\r\n                            }}\r\n                            onClick={clickShowNavigate}\r\n                        >\r\n                            {shownavigate ? <ChevronLeftIcon className='h-4 w-4 text-white' /> : <ChevronRightIcon className='h-4 w-4 text-white' />}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    id=\"chartdiv\"\r\n                    className={`h-[100vh]`}\r\n                ></div>\r\n                <div className=\"bg\"></div>\r\n                <div className=\"star-field\">\r\n                    <div className=\"layer\"></div>\r\n                    <div className=\"layer\"></div>\r\n                    <div className=\"layer\"></div>\r\n                </div>\r\n                {/* <div className='h-[100px] fixed bottom-2 right-12'>\r\n                    <img src=\"/image/main/partners.png\" alt=\"\" className='w-full h-full' />\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Destinations","import hmacSHA512 from 'crypto-js/hmac-sha512';\r\nimport Base64 from 'crypto-js/enc-base64';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport function encrtypth(text) {\r\n    const hmacDigest = Base64.stringify(hmacSHA512(text, \"TWVDb3JlRmliYUlLPQ==\"));\r\n    return hmacDigest;\r\n}\r\n\r\nexport function numberFormat(props) {\r\n    return parseFloat(props)\r\n        .toFixed(2)\r\n        .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n}\r\n\r\nexport function addMonthNoOverflow(date) {\r\n    const originalMonth = date.getMonth();\r\n\r\n    // Add 1 month\r\n    date.setMonth(date.getMonth() + 1);\r\n\r\n    // Check if the month has changed\r\n    if (date.getMonth() !== ((originalMonth + 1) % 12)) {\r\n        // If the month has changed, set the date to the last day of the previous month\r\n        date.setDate(0);\r\n    }\r\n\r\n    return date;\r\n}\r\n\r\nexport function millisecondsToFormat(milliseconds) {\r\n    const diffInSeconds = Math.floor(milliseconds / 1000);\r\n\r\n    const hours = Math.floor(diffInSeconds / 3600);\r\n    const minutes = Math.floor((diffInSeconds % 3600) / 60);\r\n    const seconds = diffInSeconds % 60;\r\n\r\n    return `${hours}h ${minutes}m ${seconds}s`;\r\n}\r\n\r\nexport function addMonthsNoOverflow(date, months) {\r\n    const newDate = new Date(date.getTime());\r\n\r\n    const currentMonth = newDate.getMonth();\r\n    const targetMonth = currentMonth + months;\r\n\r\n    newDate.setMonth(targetMonth);\r\n\r\n    if (newDate.getMonth() !== (targetMonth % 12 + 12) % 12) {\r\n        newDate.setDate(0);\r\n    }\r\n\r\n    return newDate;\r\n}\r\n\r\nexport function isLastDayOfMonth(dateString) {\r\n    const date = new Date(dateString);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const nextDay = new Date(year, month, date.getDate() + 1);\r\n\r\n    return nextDay.getMonth() !== month;\r\n}\r\n\r\nexport function getLastDayOfNextMonth(dateString) {\r\n    const today = new Date(dateString);\r\n    const nextMonth = new Date(today.getFullYear(), today.getMonth() + 1);\r\n    const lastDayOfMonth = new Date(nextMonth.getFullYear(), nextMonth.getMonth() + 1, 0);\r\n\r\n    return lastDayOfMonth;\r\n}\r\n\r\nexport const useIsPhone = () => {\r\n    const [isPhone, setIsPhone] = useState(window.innerWidth < 768); // Assuming <768px is a phone\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsPhone(window.innerWidth < 768);\r\n        };\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    return isPhone;\r\n};"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","Destinations","_choosedCountry$image","_overtime$choosedCoun","_overtime$choosedCoun2","t","useTranslation","cities","id","title","country","image","geometry","type","coordinates","perspectives","distance","duration","distanceto","durationto","destinations","choosedCountry","setChoosedCountry","useState","shownavigate","setShowNavigate","showDirection","setShowDirection","point1","setpoint1","point3data","setpoint3data","point3","setpoint3","isphone","useIsPhone","isPhone","setIsPhone","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","colors","G","am5","O","N","citiesMn","to","from","overtime","beijing","frankfurt","istanbul","seoul","tokyo","hongkong","guangzhou","busan","osaka","subcities","perspective","scrollTo","top","behavior","useLayoutEffect","root","new","countryLabels","setThemes","am5themes_Animated","chart","container","children","push","am5map","panX","panY","projection","paddingLeft","paddingRight","paddingTop","paddingBottom","cont","layout","horizontalLayout","x","y","centerX","dx","centerY","text","fill","fontWeight","fontSize","switchButton","themeTags","icon","on","get","sublineSeries","show","perspectiveSeries","subcitySeries","legend","goHome","buttonSettings","button2","label","interactive","src","cursorOverStyle","width","setAll","fillOpacity","events","gotoMongolia","zoomControl","set","homeButton","chartContainer","polygonSeries","series","geoJSON","am5geodataWorldLow","exclude","mapPolygons","template","strokeWidth","templateField","stroke","interfaceColors","ev","dataItem","target","dataContext","backgroundSeries","unshift","strokeOpacity","data","animate","key","easing","lineSeries","mapLines","visible","lineSeriesMn","lineType","bullets","circle","radius","sprite","citySeries","citySeriesMn","pointSeriesMn","planeSeriesMn","planeSeries","pointSeries","point2","addCity","latitude","longitude","lineDataItem","pushDataItem","pointsToConnect","point1Mn","coords","lineDataItemMn","createArcLine","plane","svgPath","scale","planeMn","circleTemplate","tooltipText","tooltipY","loops","Infinity","countryLabel","populateText","layer","event","planeDataItem","resetPlaneAnimation","planeDataItemMn","resetPlaneAnimationMn","mongoliaDataItem","getDataItemById","start","end","curvature","undefined","segments","i","arcFactor","Math","sin","PI","lat","lon","did","destinationDataItem","startPoint","endPoint","mainDataItem","forEach","element","positionOnLine","autoRotate","value","prevPosition","stateSeries","hide","backContainer","mongoliaGeoJSON","interactiveChildren","background","height","nameField","fillField","strokeField","useDefaultMarker","dy","zoomAnimation","zoomToDataItem","Promise","all","waitForStop","then","results","labels","name","color","appear","dispose","_jsx","className","_jsxs","style","boxShadow","DropDownList","textField","onChange","alt","backgroundImage","concat","_Fragment","onClick","clickShowNavigate","ChevronLeftIcon","ChevronRightIcon"],"sourceRoot":""}