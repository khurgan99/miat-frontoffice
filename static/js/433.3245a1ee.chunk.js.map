{"version":3,"file":"static/js/433.3245a1ee.chunk.js","mappings":"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","sources":["pages/Destinations.js"],"sourcesContent":["import { useEffect, useLayoutEffect, useState } from 'react';\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5map from \"@amcharts/amcharts5/map\";\r\nimport mongoliaGeoJSON from './mn.json';\r\nimport am5geodataWorldLow from \"@amcharts/amcharts5-geodata/worldLow\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nconst Destinations = () => {\r\n    const { t } = useTranslation();\r\n    const cities = [\r\n        {\r\n            id: \"ulaanbaatar\",\r\n            title: t('ulaanbaatar'),\r\n            country: 'mongolia',\r\n            image: \"/image/main/AdobeStock_227948748.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.917, 47.9186] },\r\n            perspectives: [\r\n                \"singapore\",\r\n                \"australia\",\r\n                \"usa\",\r\n            ]\r\n        },\r\n        {\r\n            id: \"frankfurt\",\r\n            title: t('frankfurt'),\r\n            country: 'germany',\r\n            distance: '7,010 km',\r\n            duration: \"8 hours, 45 minutes\",\r\n            image: \"/image/main/vertical-view-roemerberg-frankfurt-germany.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [8.6821, 50.1109] }\r\n        },\r\n        {\r\n            id: \"hongkong\",\r\n            title: t('hongkong'),\r\n            country: 'china',\r\n            distance: '3,350 km',\r\n            duration: \"4 hours, 10 minutes\",\r\n            image: \"/image/main/hong-kong-skyline-with-boats.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [114.2, 22.4] },\r\n            destinations: [\r\n                'delhi',\r\n                'mumbai',\r\n                'ho_chi_minh',\r\n                'singapore',\r\n                'perth',\r\n                'melbourne',\r\n                'sydney',\r\n                'brisbane',\r\n                'san_francisco',\r\n                'los_angeles',\r\n                'chicago',\r\n                'washington',\r\n                'new_york',\r\n                'boston',\r\n            ]\r\n        },\r\n        {\r\n            id: \"tokyo\",\r\n            title: t('tokyo'),\r\n            country: 'japan',\r\n            distance: '3,869 km',\r\n            duration: \"4 hours, 22 minutes\",\r\n            image: \"/image/main/AdobeStock_268173642.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [139.6917, 35.6895] },\r\n            destinations: [\r\n                'sapporo'\r\n            ]\r\n        },\r\n        {\r\n            id: \"seoul\",\r\n            title: t('seoul'),\r\n            country: 'south_korea',\r\n            distance: '2,304 km',\r\n            duration: \"2 hours, 45 minutes\",\r\n            image: \"/image/main/seoul-tower-with-gyeongbokgung-roof-red-autumn-maple-leaves-namsan-mountain-south-korea.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [126.9779, 37.5665] }\r\n        },\r\n        {\r\n            id: \"ho_chi_minh\",\r\n            title: t('ho_chi_minh'),\r\n            country: 'vietnam',\r\n            distance: '4,563 km',\r\n            duration: \"5 hours, 30 minutes\",\r\n            image: \"/image/main/54455949-city-18144-167c85df43f.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.6297, 10.8231] }\r\n        },\r\n        {\r\n            id: \"istanbul\",\r\n            title: t('istanbul'),\r\n            country: 'turkey',\r\n            distance: '6,702 km',\r\n            duration: \"8 hours, 32 minutes\",\r\n            image: \"/image/main/AdobeStock_304983855.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [28.90, 41.0582] },\r\n            destinations: [\r\n                'amsterdam',\r\n                'brussels',\r\n                'vienna',\r\n                'warsaw',\r\n                'zurich',\r\n                'barcelona',\r\n                'rome',\r\n                'chicago',\r\n            ]\r\n        },\r\n        {\r\n            id: \"busan\",\r\n            title: t('busan'),\r\n            country: 'south_korea',\r\n            distance: '2,593 km',\r\n            duration: \"3 hours, 1 minute\",\r\n            image: \"/image/main/AdobeStock_306120806.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [129.0756, 35.1796] }\r\n        },\r\n        {\r\n            id: \"bangkok\",\r\n            title: t('bangkok'),\r\n            country: 'thailand',\r\n            distance: '4,117 km',\r\n            duration: \"5 hours, 0 minute\",\r\n            image: \"/image/main/AdobeStock_105446989.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [100.5018, 13.7563] }\r\n        },\r\n        {\r\n            id: \"beijing\",\r\n            title: t('beijing'),\r\n            country: 'china',\r\n            distance: '1,383 km',\r\n            duration: \"1 hour, 50 minutes\",\r\n            image: \"/image/main/AdobeStock_38307012.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [116.4074, 39.9042] }\r\n        },\r\n        {\r\n            id: \"osaka\",\r\n            title: t('osaka'),\r\n            country: 'japan',\r\n            distance: '3,221 km',\r\n            duration: \"3 hours, 50 minutes\",\r\n            image: \"/image/main/osaka-castle-cherry-blossom-spring-sakura-seasons-osaka-japan.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [135.5022, 34.6937] }\r\n        },\r\n        {\r\n            id: \"phuket\",\r\n            title: t('phuket'),\r\n            country: 'thailand',\r\n            distance: '4,847 km',\r\n            duration: \"6 hours, 2 minutes\",\r\n            image: \"/image/main/beautiful-girl-sitting-rock-james-bond-island-phang-nga-thailand.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [98.3381, 7.8804] }\r\n        },\r\n        {\r\n            id: \"guangzhou\",\r\n            title: t('guangzhou'),\r\n            country: 'china',\r\n            distance: '2,965 km',\r\n            duration: \"3 hours, 45 minutes\",\r\n            image: \"/image/main/AdobeStock_67203423.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [113.2644, 23.1291] }\r\n        }\r\n    ];\r\n    const [choosedCountry, setChoosedCountry] = useState({});\r\n    const [shownavigate, setShowNavigate] = useState(true);\r\n    const [showDirection, setShowDirection] = useState(true);\r\n    const [point1, setpoint1] = useState(null);\r\n    const [point3data, setpoint3data] = useState(cities[0]);\r\n    const [point3, setpoint3] = useState(null);\r\n\r\n    const colors = {\r\n        G: am5.color(\"#2652fb\"),\r\n        O: am5.color(0xFFA500),\r\n        N: am5.color(0xFF1493)\r\n    }\r\n\r\n    const citiesMn = [\r\n        {\r\n            id: \"ulaanbaatar\",\r\n            title: t('ulaanbaatar'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/AdobeStock_227948748.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [106.917, 47.9186] }\r\n        },\r\n        {\r\n            id: \"dalanzadgad\",\r\n            title: t('dalanzadgad'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/_MG_9388KhermenTsavUmnugovi.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [104.416, 43.5708] }\r\n        },\r\n        {\r\n            id: \"uliastai\",\r\n            title: t('uliastai'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/OtgontengerZavhan.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [97.7694, 47.7417] }\r\n        },\r\n        {\r\n            id: \"khovd\",\r\n            title: t('khovd'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/AltanHuhiiHovd.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [91.6419, 48.0056] }\r\n        },\r\n        {\r\n            id: \"altai\",\r\n            title: t('altai'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/photo_2024-02-14_15-53-24.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [96.2491, 46.3722] }\r\n        },\r\n        {\r\n            id: \"ulaangom\",\r\n            title: t('ulaangom'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/IMG_4013TurgenMountainsUvs.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [92.0667, 49.9811] }\r\n        },\r\n        {\r\n            id: \"murun\",\r\n            title: t('murun'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/DJI_0077.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [100.155, 49.6342] }\r\n        },\r\n        {\r\n            id: \"ulgii\",\r\n            title: t('ulgii'),\r\n            country: \"Mongolia\",\r\n            distance: \"N/A\",\r\n            duration: \"N/A\",\r\n            image: \"/image/main/BagaturgeniiuulsBayanUlgii.jpg\",\r\n            geometry: { type: \"Point\", coordinates: [89.9674, 48.9683] }\r\n        },\r\n    ];\r\n\r\n    const subcities = [\r\n        {\r\n            id: \"amsterdam\",\r\n            title: t('amsterdam'),\r\n            country: 'netherlands',\r\n            geometry: { type: \"Point\", coordinates: [4.9041, 52.3676] }\r\n        },\r\n        {\r\n            id: \"brussels\",\r\n            title: t('brussels'),\r\n            country: 'belgium',\r\n            geometry: { type: \"Point\", coordinates: [4.3517, 50.8503] }\r\n        },\r\n        {\r\n            id: \"vienna\",\r\n            title: t('vienna'),\r\n            country: 'austria',\r\n            geometry: { type: \"Point\", coordinates: [16.3738, 48.2082] }\r\n        },\r\n        {\r\n            id: \"warsaw\",\r\n            title: t('warsaw'),\r\n            country: 'poland',\r\n            geometry: { type: \"Point\", coordinates: [21.0122, 52.2298] }\r\n        },\r\n        {\r\n            id: \"zurich\",\r\n            title: t('zurich'),\r\n            country: 'switzerland',\r\n            geometry: { type: \"Point\", coordinates: [8.5417, 47.3769] }\r\n        },\r\n        {\r\n            id: \"barcelona\",\r\n            title: t('barcelona'),\r\n            country: 'spain',\r\n            geometry: { type: \"Point\", coordinates: [2.1734, 41.3851] }\r\n        },\r\n        {\r\n            id: \"rome\",\r\n            title: t('rome'),\r\n            country: 'italy',\r\n            geometry: { type: \"Point\", coordinates: [12.4964, 41.9028] }\r\n        },\r\n        {\r\n            id: \"chicago\",\r\n            title: t('chicago'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-87.6298, 41.8781] }\r\n        },\r\n        {\r\n            id: \"delhi\",\r\n            title: t('delhi'),\r\n            country: 'india',\r\n            geometry: { type: \"Point\", coordinates: [77.2090, 28.6139] }\r\n        },\r\n        {\r\n            id: \"mumbai\",\r\n            title: t('mumbai'),\r\n            country: 'india',\r\n            geometry: { type: \"Point\", coordinates: [72.8777, 19.0760] }\r\n        },\r\n        {\r\n            id: \"ho_chi_minh\",\r\n            title: t('ho_chi_minh'),\r\n            country: 'vietnam',\r\n            geometry: { type: \"Point\", coordinates: [106.6602, 10.7629] }\r\n        },\r\n        {\r\n            id: \"singapore\",\r\n            title: t('singapore'),\r\n            country: 'singapore',\r\n            geometry: { type: \"Point\", coordinates: [103.8198, 1.3521] }\r\n        },\r\n        {\r\n            id: \"perth\",\r\n            title: t('perth'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [115.8575, -31.9505] }\r\n        },\r\n        {\r\n            id: \"melbourne\",\r\n            title: t('melbourne'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [144.9631, -37.8136] }\r\n        },\r\n        {\r\n            id: \"sydney\",\r\n            title: t('sydney'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [151.2093, -33.8688] }\r\n        },\r\n        {\r\n            id: \"brisbane\",\r\n            title: t('brisbane'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [153.0251, -27.4698] }\r\n        },\r\n        {\r\n            id: \"san_francisco\",\r\n            title: t('san_francisco'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-122.4194, 37.7749] }\r\n        },\r\n        {\r\n            id: \"los_angeles\",\r\n            title: t('los_angeles'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-118.2437, 34.0522] }\r\n        },\r\n        {\r\n            id: \"washington\",\r\n            title: t('washington'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-77.0369, 38.9072] }\r\n        },\r\n        {\r\n            id: \"new_york\",\r\n            title: t('new_york'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-74.0060, 40.7128] }\r\n        },\r\n        {\r\n            id: \"boston\",\r\n            title: t('boston'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-71.0589, 42.3601] }\r\n        },\r\n        {\r\n            id: \"sapporo\",\r\n            title: t('sapporo'),\r\n            country: 'japan',\r\n            geometry: { type: \"Point\", coordinates: [141.3544, 43.0618] }\r\n        },\r\n        {\r\n            id: \"singapore\",\r\n            title: t('singapore'),\r\n            country: 'singapore',\r\n            geometry: { type: \"Point\", coordinates: [103.8198, 1.3521] },\r\n            perspective: true\r\n        },\r\n        {\r\n            id: \"australia\",\r\n            title: t('australia'),\r\n            country: 'australia',\r\n            geometry: { type: \"Point\", coordinates: [133.7751, -25.2744] },\r\n            perspective: true,\r\n        },\r\n        {\r\n            id: \"usa\",\r\n            title: t('usa'),\r\n            country: 'usa',\r\n            geometry: { type: \"Point\", coordinates: [-98.5795, 39.8283] },\r\n            perspective: true,\r\n        }\r\n    ];\r\n\r\n    const clickShowNavigate = () => {\r\n        setShowNavigate(!shownavigate)\r\n    }\r\n\r\n    const changePoint1 = (event) => {\r\n        const data = event.value;\r\n        setChoosedCountry(data)\r\n        if (point3data.id === 'ulaanbaatar') {\r\n            point3.setAll({\r\n                longitude: data.geometry.coordinates[0],\r\n                latitude: data.geometry.coordinates[1]\r\n            })\r\n        }\r\n        point1.setAll({\r\n            longitude: data.geometry.coordinates[0],\r\n            latitude: data.geometry.coordinates[1]\r\n        })\r\n    }\r\n\r\n    const changePoint3 = (event) => {\r\n        const data = event.value;\r\n        setpoint3data(data)\r\n        point3.setAll({\r\n            longitude: data.geometry.coordinates[0],\r\n            latitude: data.geometry.coordinates[1]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        let root = am5.Root.new(\"chartdiv\");\r\n        const countryLabels = [];\r\n        // Set themes\r\n        root.setThemes([\r\n            am5themes_Animated.new(root)\r\n        ]);\r\n\r\n        var chart = root.container.children.push(\r\n            am5map.MapChart.new(root, {\r\n                panX: \"rotateX\",\r\n                panY: \"rotateY\",\r\n                // projection: am5map.geoMercator(),\r\n                // projection: am5map.geoNaturalEarth1(),\r\n                projection: am5map.geoOrthographic(),\r\n                // homeGeoPoint: { latitude: 46.8625, longitude: 103.8467 },\r\n                // wheelY: \"none\",\r\n                // rotationX: -130.8467,\r\n                // scale: 1.5\r\n            })\r\n        );\r\n\r\n        var cont = chart.children.push(am5.Container.new(root, {\r\n            layout: root.horizontalLayout,\r\n            x: am5.p100,\r\n            y: 100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n        }));\r\n\r\n        // Add labels and controls\r\n        cont.children.push(am5.Label.new(root, {\r\n            centerY: am5.p50,\r\n            text: t('connected'),\r\n            fill: am5.color(0xffffff),\r\n            fontWeight: \"bold\",\r\n            fontSize: 12,\r\n        }));\r\n\r\n        var switchButton = cont.children.push(am5.Button.new(root, {\r\n            themeTags: [\"switch\"],\r\n            centerY: am5.p50,\r\n            icon: am5.Circle.new(root, {\r\n                themeTags: [\"icon\"]\r\n            })\r\n        }));\r\n\r\n        cont.children.push(\r\n            am5.Label.new(root, {\r\n                centerY: am5.p50,\r\n                text: t('routes'),\r\n                fill: am5.color(0xffffff),\r\n                fontWeight: \"bold\",\r\n                fontSize: 12,\r\n            })\r\n        );\r\n\r\n        switchButton.on(\"active\", function () {\r\n            if (!switchButton.get(\"active\")) {\r\n                goHome()\r\n            } else {\r\n                sublineSeries.show()\r\n                perspectiveSeries.show()\r\n                subcitySeries.show()\r\n                legend.show()\r\n                setShowDirection(false)\r\n            }\r\n        });\r\n\r\n\r\n        let zoomControl = chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\r\n        zoomControl.homeButton.set(\"visible\", true);\r\n        chart.chartContainer.get(\"background\").events.on(\"click\", function () {\r\n            goHome();\r\n        })\r\n\r\n        zoomControl.homeButton.events.on(\"click\", function () {\r\n            goHome();\r\n        })\r\n\r\n        // Create polygon series\r\n        var polygonSeries = chart.series.push(\r\n            am5map.MapPolygonSeries.new(root, {\r\n                geoJSON: am5geodataWorldLow,\r\n                exclude: [\"AQ\"]\r\n            })\r\n        );\r\n\r\n        polygonSeries.mapPolygons.template.events.on(\"click\", (ev) => {\r\n            var dataItem = ev.target.dataItem;\r\n            var data = dataItem.dataContext;\r\n            if (data.id === 'MN') {\r\n                var zoomAnimation = polygonSeries.zoomToDataItem(dataItem);\r\n                Promise.all([\r\n                    zoomAnimation.waitForStop(),\r\n                ]).then(function (results) {\r\n                    stateSeries.show();\r\n                    // polygonSeries.hide(100)\r\n                    backContainer.show();\r\n                    lineSeries.hide()\r\n                    planeSeries.hide()\r\n                    sublineSeries.hide()\r\n                    perspectiveSeries.hide()\r\n                    legend.hide()\r\n\r\n                    lineSeriesMn.set(\"layer\", 100);\r\n                    planeSeriesMn.set(\"layer\", 100);\r\n                    citySeriesMn.set(\"layer\", 100);\r\n                    // pointSeriesMn.show();\r\n                    lineSeriesMn.show();\r\n                    planeSeriesMn.show();\r\n                    citySeriesMn.show();\r\n                    cont.hide()\r\n                    setShowDirection(false)\r\n                });\r\n\r\n                // zoomMongolia()\r\n            }\r\n        });\r\n\r\n        // let colors = am5.ColorSet.new(root, {\r\n        //     step: 2\r\n        // });\r\n        // colors.next();\r\n\r\n        // polygonSeries.mapPolygons.template.states.create(\"hover\", {\r\n        //     fill: am5.Color.brighten(colors.next(), -0.3)\r\n        // });\r\n\r\n        var backgroundSeries = chart.series.unshift(\r\n            am5map.MapPolygonSeries.new(root, {})\r\n        );\r\n\r\n        backgroundSeries.mapPolygons.template.setAll({\r\n            fill: am5.color(\"#00000080\"),\r\n            strokeOpacity: 0\r\n        });\r\n\r\n        backgroundSeries.data.push({\r\n            geometry: am5map.getGeoRectangle(90, 180, -90, -180)\r\n        });\r\n\r\n        chart.animate({ key: \"rotationX\", to: -80.8467, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });\r\n        chart.animate({ key: \"rotationY\", to: -20.8625, duration: 1500, easing: am5.ease.inOut(am5.ease.cubic) });\r\n\r\n        // this will be invisible line (note strokeOpacity = 0) along which invisible points will animate\r\n        let lineSeries = chart.series.push(am5map.MapLineSeries.new(root, {}));\r\n        lineSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: am5.color(\"#2259ff\"),\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let sublineSeries = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            visible: false\r\n        }));\r\n        sublineSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: colors.O,\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let perspectiveSeries = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            visible: false\r\n        }));\r\n        perspectiveSeries.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: colors.N,\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        let lineSeriesMn = chart.series.push(am5map.MapLineSeries.new(root, {\r\n            lineType: \"curved\",\r\n            visible: false,\r\n        }));\r\n\r\n        lineSeriesMn.mapLines.template.setAll({\r\n            strokeOpacity: 1,\r\n            stroke: am5.color(\"#2259ff\"),\r\n            strokeWidth: 1,\r\n            // strokeDasharray: 1\r\n        });\r\n\r\n        // this will be visible line. Lines will connectg animating points so they will look like animated\r\n        // let animatedLineSeries = chart.series.push(am5map.MapLineSeries.new(root, {}));\r\n        // animatedLineSeries.mapLines.template.setAll({\r\n        //     // stroke: am5.color(0xffba00),\r\n        //     // strokeOpacity: 0.6,\r\n        //     strokeWidth: 1,\r\n        // });\r\n\r\n        // invisible series which will animate along invisible lines\r\n        let animatedBulletSeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {})\r\n        );\r\n\r\n        animatedBulletSeries.bullets.push(function () {\r\n            let circle = am5.Circle.new(root, {\r\n                radius: 0\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: circle\r\n            });\r\n        });\r\n\r\n        // destination series\r\n        let citySeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {})\r\n        );\r\n\r\n        let subcitySeries = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {\r\n                visible: false,\r\n            })\r\n        );\r\n\r\n        let citySeriesMn = chart.series.push(\r\n            am5map.MapPointSeries.new(root, {\r\n                visible: false,\r\n            })\r\n        );\r\n\r\n        let pointSeriesMn = chart.series.push(am5map.MapPointSeries.new(root, {\r\n            \r\n        }));\r\n        let planeSeriesMn = chart.series.push(am5map.MapPointSeries.new(root, {\r\n            visible: false,\r\n        }));\r\n        let planeSeries = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n        let pointSeries = chart.series.push(am5map.MapPointSeries.new(root, {}));\r\n\r\n        let point1 = null;\r\n        let point2 = addCity({ latitude: 47.9186, longitude: 106.917 }, \"Ulaanbaatar\");\r\n        let point3 = null;\r\n\r\n        if (choosedCountry.id) {\r\n            point1 = addCity({\r\n                latitude: choosedCountry.geometry.coordinates[1],\r\n                longitude: choosedCountry.geometry.coordinates[0]\r\n            }, \"Frankfurt\");\r\n            point3 = addCity({\r\n                latitude: choosedCountry.geometry.coordinates[1],\r\n                longitude: choosedCountry.geometry.coordinates[0]\r\n            }, \"Frankfurt\");\r\n        } else {\r\n            point1 = addCity({ latitude: 50.1109, longitude: 8.6821 }, \"Frankfurt\");\r\n            point3 = addCity({ latitude: 50.1109, longitude: 8.6821 }, \"Frankfurt\");\r\n        }\r\n\r\n        setpoint1(point1)\r\n        setpoint3(point3)\r\n\r\n        let lineDataItem = lineSeries.pushDataItem({\r\n            pointsToConnect: [point1, point2, point3]\r\n        });\r\n\r\n        const point1Mn = addCityMn({ latitude: 47.9186, longitude: 106.917 }, \"Ulaanbaatar\");\r\n        const point2Mn = addCityMn({ latitude: 48.0056, longitude: 91.6419 });\r\n\r\n        let lineDataItemMn = lineSeriesMn.pushDataItem({\r\n            pointsToConnect: [point1Mn, point2Mn],\r\n        });\r\n\r\n        let plane = am5.Graphics.new(root, {\r\n            svgPath:\r\n                \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\",\r\n            scale: 0.07,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            fill: am5.color('#fcffff')\r\n        });\r\n\r\n        let planeMn = am5.Graphics.new(root, {\r\n            svgPath:\r\n                \"m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47\",\r\n            scale: 0.07,\r\n            centerY: am5.p50,\r\n            centerX: am5.p50,\r\n            fill: am5.color('#fcffff')\r\n        });\r\n\r\n        planeSeries.bullets.push(function () {\r\n            let container = am5.Container.new(root, {});\r\n            container.children.push(plane);\r\n            return am5.Bullet.new(root, { sprite: container });\r\n        });\r\n\r\n        planeSeriesMn.bullets.push(function () {\r\n            let container = am5.Container.new(root, {});\r\n            container.children.push(planeMn);\r\n            return am5.Bullet.new(root, { sprite: container });\r\n        });\r\n\r\n        let circleTemplate = am5.Template.new({});\r\n        \r\n        // visible city circles\r\n        citySeries.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(0xffffff), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.1,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 2,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1000, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 14,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    layer: 5,\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n            countryLabels.push(countryLabel)\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItem.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setChoosedCountry(data);\r\n                setShowNavigate(true)\r\n                point1.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n                point3.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n        citySeries.data.setAll(cities);\r\n\r\n        subcitySeries.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n            const data = dataItem.dataContext;\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: data.perspective ? colors.N : colors.O, // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(0xffffff), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 2,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1000, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    layer: 5,\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n            countryLabels.push(countryLabel)\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItem.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setShowNavigate(true)\r\n                let isfound = null;\r\n                cities.forEach(element => {\r\n                    if (element.destinations) {\r\n                        element.destinations.forEach(city => {\r\n                            if (city === data.id) {\r\n                                isfound = element;\r\n                                point2.setAll({\r\n                                    longitude: element.geometry.coordinates[0],\r\n                                    latitude: element.geometry.coordinates[1]\r\n                                })\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                setChoosedCountry({ ...data, issub: isfound });\r\n\r\n                if (!isfound) {\r\n                    point2.setAll({\r\n                        longitude: data.geometry.coordinates[0],\r\n                        latitude: data.geometry.coordinates[1]\r\n                    })\r\n                }\r\n\r\n                point3.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n\r\n        subcitySeries.data.setAll(subcities);\r\n\r\n        citySeriesMn.bullets.push(function (root, series, dataItem) {\r\n            let container = am5.Container.new(root, {});\r\n\r\n            let circle = container.children.push(\r\n                am5.Circle.new(root, {\r\n                    layer: 100,\r\n                    radius: 6,\r\n                    tooltipText: \"{title}\",\r\n                    tooltipY: 0,\r\n                    fill: am5.color(\"#2652fb\"), // 6 тэмдэгттэй HEX\r\n                    stroke: am5.color(0xffffff), // 6 тэмдэгттэй HEX\r\n                    strokeOpacity: 0.3,\r\n                    // \"scale\": 0.7,\r\n                    \"strokeWidth\": 2,\r\n                    interactive: true, // Интерактив байдал нэмэх\r\n                    cursorOverStyle: \"pointer\" // Hover үед курсорыг \"pointer\" болгох\r\n                }, circleTemplate)\r\n            );\r\n            circle.set(\"layer\", 200);\r\n            circle.animate({\r\n                key: \"strokeOpacity\",\r\n                to: 1,\r\n                duration: 1500, // Animation duration in milliseconds (1s)\r\n                loops: Infinity, // Infinite loop\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth effect\r\n            });\r\n\r\n            let countryLabel = container.children.push(\r\n                am5.Label.new(root, {\r\n                    text: \"{title}\",\r\n                    layer: 100,\r\n                    paddingLeft: 5,\r\n                    populateText: true,\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 12,\r\n                    centerY: am5.p50,\r\n                    x: circle.get(\"radius\"),\r\n                    fill: am5.color(0xffffff)\r\n                })\r\n            );\r\n\r\n            circle.on(\"radius\", function (radius) {\r\n                countryLabel.set(\"x\", radius);\r\n            })\r\n            countryLabels.push(countryLabel)\r\n            circle.events.on(\"pointerover\", function (event) {\r\n                event.target.set(\"scale\", 1.2); // Hover үед хэмжээг томруулах\r\n            })\r\n            circle.events.on(\"pointerout\", function (event) {\r\n                event.target.set(\"scale\", 1); // Хэвийн хэмжээнд буцаах\r\n            })\r\n\r\n            circle.events.on(\"click\", function (event) {\r\n                planeDataItemMn.set(\"positionOnLine\", 0);\r\n                // planeDataItem.clear();\r\n                resetPlaneAnimation()\r\n                var dataItem = event.target.dataItem;\r\n                var data = dataItem.dataContext;\r\n                setChoosedCountry(data);\r\n                setShowNavigate(true)\r\n                point2Mn.setAll({\r\n                    longitude: data.geometry.coordinates[0],\r\n                    latitude: data.geometry.coordinates[1]\r\n                })\r\n            });\r\n\r\n            return am5.Bullet.new(root, {\r\n                sprite: container\r\n            });\r\n        });\r\n        citySeriesMn.data.setAll(citiesMn);\r\n        // Prepare line series data\r\n        let mongoliaDataItem = citySeries.getDataItemById(\"ulaanbaatar\");\r\n\r\n        am5.array.each(citiesMn, function (did) {\r\n            let destinationDataItem = citySeriesMn.getDataItemById(did.id);\r\n            let lineDataItem = lineSeriesMn.pushDataItem({});\r\n            lineDataItem.set(\"pointsToConnect\", [mongoliaDataItem, destinationDataItem])\r\n        });\r\n\r\n        // this will do all the animations\r\n        am5.array.each(cities, function (did) {\r\n            let destinationDataItem = citySeries.getDataItemById(did.id);\r\n            let lineDataItem = lineSeries.pushDataItem({});\r\n            lineDataItem.set(\"pointsToConnect\", [mongoliaDataItem, destinationDataItem])\r\n        });\r\n\r\n        am5.array.each(cities, function (did) {\r\n            if (did.destinations) {\r\n                let mainDataItem = citySeries.getDataItemById(did.id);\r\n                did.destinations.forEach(element => {\r\n                    let lineDataItem = sublineSeries.pushDataItem({});\r\n                    let destinationDataItem = subcitySeries.getDataItemById(element);\r\n                    lineDataItem.set(\"pointsToConnect\", [mainDataItem, destinationDataItem])\r\n                });\r\n            }\r\n            if (did.perspectives) {\r\n                let mainDataItem = citySeries.getDataItemById(did.id);\r\n                did.perspectives.forEach(element => {\r\n                    let lineDataItem = perspectiveSeries.pushDataItem({});\r\n                    let destinationDataItem = subcitySeries.getDataItemById(element);\r\n                    lineDataItem.set(\"pointsToConnect\", [mainDataItem, destinationDataItem])\r\n                });\r\n            }\r\n        });\r\n\r\n        let planeDataItem = planeSeries.pushDataItem({\r\n            lineDataItem,\r\n            positionOnLine: 0,\r\n            autoRotate: true\r\n        });\r\n\r\n        planeDataItem.dataContext = {};\r\n        let planeDataItemMn = planeSeriesMn.pushDataItem({\r\n            lineDataItem: lineDataItemMn,\r\n            positionOnLine: 0,\r\n            autoRotate: true\r\n        });\r\n\r\n        planeDataItemMn.dataContext = {};\r\n        resetPlaneAnimation()\r\n\r\n        function resetPlaneAnimation() {\r\n            // Re-animate the plane along the line\r\n            planeDataItem.animate({\r\n                key: \"positionOnLine\",\r\n                to: 1,\r\n                duration: 30000, // Adjust duration as needed\r\n                loops: Infinity, // Make sure it loops if desired\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth yoyo animation\r\n            });\r\n\r\n            // Update the rotation based on position\r\n            planeDataItem.on(\"positionOnLine\", (value) => {\r\n                if (planeDataItem.dataContext.prevPosition < value) {\r\n                    plane.set(\"rotation\", 0);\r\n                }\r\n\r\n                if (planeDataItem.dataContext.prevPosition > value) {\r\n                    plane.set(\"rotation\", -180);\r\n                }\r\n                planeDataItem.dataContext.prevPosition = value;\r\n            });\r\n\r\n            planeDataItemMn.animate({\r\n                key: \"positionOnLine\",\r\n                to: 1,\r\n                duration: 30000, // Adjust duration as needed\r\n                loops: Infinity, // Make sure it loops if desired\r\n                easing: am5.ease.yoyo(am5.ease.linear) // Smooth yoyo animation\r\n            });\r\n\r\n            // Update the rotation based on position\r\n            planeDataItemMn.on(\"positionOnLine\", (value) => {\r\n                if (planeDataItemMn.dataContext.prevPosition < value) {\r\n                    planeMn.set(\"rotation\", 0);\r\n                }\r\n\r\n                if (planeDataItemMn.dataContext.prevPosition > value) {\r\n                    planeMn.set(\"rotation\", -180);\r\n                }\r\n                planeDataItemMn.dataContext.prevPosition = value;\r\n            });\r\n        }\r\n\r\n        function addCity(coords, title) {\r\n            return pointSeries.pushDataItem({\r\n                latitude: coords.latitude,\r\n                longitude: coords.longitude\r\n            });\r\n        }\r\n\r\n        function addCityMn(coords, title) {\r\n            return pointSeriesMn.pushDataItem({\r\n                latitude: coords.latitude,\r\n                longitude: coords.longitude\r\n            });\r\n        }\r\n\r\n        function goHome() {\r\n            chart.goHome();\r\n            stateSeries.hide();\r\n            backContainer.hide();\r\n            lineSeriesMn.hide();\r\n            planeSeriesMn.hide();\r\n            citySeriesMn.hide();\r\n            lineSeries.show()\r\n            planeSeries.show()\r\n            sublineSeries.hide()\r\n            perspectiveSeries.hide()\r\n            subcitySeries.hide()\r\n            legend.hide()\r\n            cont.show()\r\n            setShowDirection(true)\r\n        }\r\n\r\n        var stateSeries = chart.series.push(am5map.MapPolygonSeries.new(root, {\r\n            visible: false,\r\n            geoJSON: mongoliaGeoJSON\r\n        }));\r\n\r\n        stateSeries.mapPolygons.template.setAll({\r\n            fill: am5.color(0x6771DC),\r\n            templateField: \"polygonSettings\"\r\n        });\r\n\r\n        var backContainer = chart.children.push(am5.Container.new(root, {\r\n            x: am5.p100,\r\n            centerX: am5.p100,\r\n            dx: -10,\r\n            paddingTop: 2,\r\n            paddingRight: 10,\r\n            paddingBottom: 2,\r\n            y: 100,\r\n            interactiveChildren: false,\r\n            layout: root.horizontalLayout,\r\n            cursorOverStyle: \"pointer\",\r\n            background: am5.RoundedRectangle.new(root, {\r\n                fill: am5.color(0xffffff),\r\n                fillOpacity: 0.2\r\n            }),\r\n            visible: false\r\n        }));\r\n\r\n        backContainer.children.push(am5.Label.new(root, {\r\n            text: \"Back\",\r\n            centerY: am5.p50,\r\n            fill: am5.color(0xffffff)\r\n        }));\r\n\r\n        backContainer.children.push(am5.Graphics.new(root, {\r\n            width: 32,\r\n            height: 32,\r\n            centerY: am5.p50,\r\n            fill: am5.color(0xffffff),\r\n            svgPath: \"M12 9.059V6.5a1.001 1.001 0 0 0-1.707-.708L4 12l6.293 6.207a.997.997 0 0 0 1.414 0A.999.999 0 0 0 12 17.5v-2.489c2.75.068 5.755.566 8 3.989v-1c0-4.633-3.5-8.443-8-8.941z\"\r\n        }));\r\n\r\n        backContainer.events.on(\"click\", function () {\r\n            goHome();\r\n        });\r\n\r\n        let legend = chart.children.push(am5.Legend.new(root, {\r\n            visible: false,\r\n            nameField: \"name\",\r\n            fillField: \"color\",\r\n            strokeField: \"color\",\r\n            useDefaultMarker: true,\r\n            centerX: am5.p50,\r\n            x: am5.p50,\r\n            centerY: am5.p100,\r\n            y: am5.p100,\r\n            dy: -20,\r\n            background: am5.RoundedRectangle.new(root, {\r\n                fill: am5.color(0xffffff),\r\n                fillOpacity: 0.2\r\n            })\r\n        }));\r\n\r\n        legend.labels.template.setAll({\r\n            fill: am5.color(0xffffff) // White text color\r\n        });\r\n\r\n        legend.data.setAll([{\r\n            name: t(\"scheduled_routes\"),\r\n            color: colors.G,\r\n        }, {\r\n            name: t(\"codeshare_routes\"),\r\n            color: colors.O\r\n        }, {\r\n            name: t(\"perspective\"),\r\n            color: colors.N\r\n        }]);\r\n\r\n        return () => {\r\n            root.dispose();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className='mb-[4rem] h-[100vh]'>\r\n            <div className='w-[100%] h-[100vh] fixed top-0 left-0'>\r\n\r\n                <div className={classNames(\r\n                    choosedCountry.title ? 'opacity-100' : 'opacity-0',\r\n                    'transition-opacity ease-in-out delay-150 duration-300'\r\n                )}>\r\n                    <div\r\n                        className={\r\n                            classNames(\r\n                                'transition absolute bg-black/30 w-[22rem] h-full text-white pt-20',\r\n                                'backdrop-blur-md px-4 py-8 space-y-4 shadow-md z-10 duration-500',\r\n                                shownavigate ? 'translate-x-0' : '-translate-x-full'\r\n                            )}\r\n                        style={{\r\n                            boxShadow: \"0 1px 2px rgba(60,64,67,0.3),0 2px 6px 2px rgba(60,64,67,0.15)\"\r\n                        }}\r\n                    >\r\n                        {/* <div className='text-center'>\r\n                                    {t('ulaanbaatar')} - {t(choosedCountry.id)}\r\n                                </div> */}\r\n                        <div className=\"flex flex-col justify-between h-full\">\r\n                            <div>\r\n                                {showDirection && <div className='flex mb-2'>\r\n                                    <DropDownList\r\n                                        data={cities}\r\n                                        textField='title'\r\n                                        value={choosedCountry}\r\n                                        onChange={changePoint1}\r\n                                    />\r\n                                    <div className='w-16 mx-2'>\r\n                                        <img src=\"/image/main/35456.png\" alt=\"\" className='w-full' />\r\n                                    </div>\r\n                                    <DropDownList\r\n                                        data={cities}\r\n                                        textField='title'\r\n                                        value={point3data}\r\n                                        onChange={changePoint3}\r\n                                    />\r\n                                </div>}\r\n                                <div\r\n                                    style={{ backgroundImage: `url(${choosedCountry.image ?? \"/image/main/plane-500.jpg\"})` }}\r\n                                    className='rounded-md bg-cover bg-center bg-no-repeat h-44 w-full'\r\n                                >\r\n                                    {/* <img src={choosedCountry.image ?? \"/image/main/plane-500.jpg\"} alt=\"\"\r\n                                                className=\"rounded-md h-60\"\r\n                                            /> */}\r\n                                </div>\r\n                                {choosedCountry.image && <div className='text-justify text-sm mt-4'>\r\n                                    {t(choosedCountry.id + 'desc')}\r\n                                </div>}\r\n                            </div>\r\n                            <div>\r\n                                <div className='absolute right-[20%] pt-3 font-bold'>\r\n                                    {t(choosedCountry.id)}\r\n                                </div>\r\n                                {choosedCountry.distance && <div className='absolute bottom-[12rem] left-[10px]'>\r\n                                    <div className='flex items-center bg-black/30 p-2 rounded backdrop-blur-md'>\r\n                                        <div className='text-xs'>Distance: &nbsp;</div>\r\n                                        <div className='text-sm'>{choosedCountry.distance}</div>\r\n                                    </div>\r\n                                    <span className=\"relative flex h-3 w-3 mx-auto -z-[1]\">\r\n                                        <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75\"></span>\r\n                                        <span className=\"relative h-3 w-3 rounded-full bg-sky-500\"></span>\r\n                                    </span>\r\n                                </div>}\r\n                                <img src=\"/logos/some/flight2.png\" alt=\"\" className='h-64' />\r\n                                {choosedCountry.issub && <div className='absolute bottom-[8rem] left-[50%] font-bold'>\r\n                                    {t(choosedCountry.issub.id)}\r\n                                </div>}\r\n                                <div className='absolute bottom-[3rem] left-[20%] font-bold'>\r\n                                    {t('ulaanbaatar')}\r\n                                </div>\r\n                                {choosedCountry.duration && <div className='absolute bottom-[6rem] right-[5px] bg-black/30 p-2 rounded backdrop-blur-md'>\r\n                                    <div className='text-xs'>Total travel time: </div>\r\n                                    <div className='text-sm'>{choosedCountry.duration}</div>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\r\n                        classNames(\r\n                            'transition absolute left-[22rem] top-[calc(50%-24px)] block z-10 duration-500',\r\n                            shownavigate ? 'translate-x-0' : '-translate-x-[22rem]'\r\n                        )\r\n                    }>\r\n                        <button\r\n                            className={classNames(\r\n                                'h-[48px] w-[23px] bg-black/30 backdrop-blur-md cursor-pointer hover:bg-primary-700',\r\n                                'rounded-r-full border-l border-l-primary-600'\r\n                            )}\r\n                            style={{\r\n                                boxShadow: '0 1px 2px rgba(60, 64, 67, 0.3), 0 2px 6px 2px rgba(60, 64, 67, 0.15)'\r\n                            }}\r\n                            onClick={clickShowNavigate}\r\n                        >\r\n                            {shownavigate ? <ChevronLeftIcon className='h-4 w-4 text-white' /> : <ChevronRightIcon className='h-4 w-4 text-white' />}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div id=\"chartdiv\" className=\"h-[100vh]\"></div>\r\n                <div className=\"bg\"></div>\r\n                <div className=\"star-field\">\r\n                    <div className=\"layer\"></div>\r\n                    <div className=\"layer\"></div>\r\n                    <div className=\"layer\"></div>\r\n                </div>\r\n                {/* <div className='h-[100px] fixed bottom-2 right-12'>\r\n                    <img src=\"/image/main/partners.png\" alt=\"\" className='w-full h-full' />\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Destinations"],"names":["classNames","_len","arguments","length","classes","Array","_key","filter","Boolean","join","Destinations","_choosedCountry$image","t","useTranslation","cities","id","title","country","image","geometry","type","coordinates","perspectives","distance","duration","destinations","choosedCountry","setChoosedCountry","useState","shownavigate","setShowNavigate","showDirection","setShowDirection","point1","setpoint1","point3data","setpoint3data","point3","setpoint3","colors","G","am5","O","N","citiesMn","subcities","perspective","useEffect","window","scrollTo","top","behavior","useLayoutEffect","root","new","countryLabels","setThemes","am5themes_Animated","chart","container","children","push","am5map","panX","panY","projection","cont","layout","horizontalLayout","x","y","centerX","dx","centerY","text","fill","fontWeight","fontSize","switchButton","themeTags","icon","on","get","sublineSeries","show","perspectiveSeries","subcitySeries","legend","goHome","zoomControl","set","homeButton","chartContainer","events","polygonSeries","series","geoJSON","am5geodataWorldLow","exclude","mapPolygons","template","ev","dataItem","target","dataContext","zoomAnimation","zoomToDataItem","Promise","all","waitForStop","then","results","stateSeries","backContainer","lineSeries","hide","planeSeries","lineSeriesMn","planeSeriesMn","citySeriesMn","backgroundSeries","unshift","setAll","strokeOpacity","data","animate","key","to","easing","mapLines","stroke","strokeWidth","visible","lineType","bullets","circle","radius","sprite","citySeries","pointSeriesMn","pointSeries","point2","addCity","latitude","longitude","lineDataItem","pushDataItem","pointsToConnect","point1Mn","addCityMn","point2Mn","lineDataItemMn","plane","svgPath","scale","planeMn","circleTemplate","tooltipText","tooltipY","interactive","cursorOverStyle","loops","Infinity","countryLabel","paddingLeft","populateText","layer","event","planeDataItem","resetPlaneAnimation","isfound","forEach","element","city","issub","planeDataItemMn","mongoliaDataItem","getDataItemById","did","destinationDataItem","mainDataItem","positionOnLine","autoRotate","value","prevPosition","coords","mongoliaGeoJSON","templateField","paddingTop","paddingRight","paddingBottom","interactiveChildren","background","fillOpacity","width","height","nameField","fillField","strokeField","useDefaultMarker","dy","labels","name","color","dispose","_jsx","className","_jsxs","style","boxShadow","DropDownList","textField","onChange","src","alt","backgroundImage","concat","onClick","clickShowNavigate","ChevronLeftIcon","ChevronRightIcon"],"sourceRoot":""}